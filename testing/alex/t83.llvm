declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
define i1@func1(i32){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
%truncated_byte1 = trunc i32 %0 to i8
%reg2 = add i8 0, %truncated_byte1
%b2int_conv_reg3 = zext i8 %reg2 to i32
%reg4 = icmp slt i32 %b2int_conv_reg3, 5
br i1 %reg4, label %true_case_9, label %false_case_11
true_case_9:
br label %set_bool_reg_13
false_case_11:
br label %set_bool_reg_13
set_bool_reg_13:
%reg5 = phi i1 [1, %true_case_9], [0, %false_case_11]
ret i1 %reg5
br label %func_end_17
func_end_17:
ret i1 0
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_23
statement_23:
%reg6 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 0, i32* %reg6
br label %cond_27
cond_27:
%param_ptr7 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw8 = load i32, i32* %param_ptr7
%truncated_byte9 = trunc i32 %param_raw8 to i8
%reg10 = add i8 0, %truncated_byte9
%raw_reg11 = zext i8 %reg10 to i32
%reg12 = call i1(i32) @func1(i32 %raw_reg11)
br i1 %reg12, label %true_case_35, label %false_case_37
true_case_35:
br label %statement_39
false_case_37:
br label %func_end_58
statement_39:
%param_ptr13 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw14 = load i32, i32* %param_ptr13
%truncated_byte15 = trunc i32 %param_raw14 to i8
%reg16 = add i8 0, %truncated_byte15
%raw_reg17 = zext i8 %reg16 to i32
call void(i32) @printi(i32 %raw_reg17)
br label %statement_47
statement_47:
%param_ptr18 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw19 = load i32, i32* %param_ptr18
%truncated_byte20 = trunc i32 %param_raw19 to i8
%reg21 = add i8 0, %truncated_byte20
%reg22 = add i8 %reg21, 1
%raw_reg23 = zext i8 %reg22 to i32
%reg24 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %raw_reg23, i32* %reg24
br label %cond_27
br label %func_end_58
func_end_58:
ret void
}
