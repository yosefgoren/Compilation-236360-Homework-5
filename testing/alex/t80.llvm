declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
@.string_id0 = constant [5 x i8] c"ok11\00"
@.string_id1 = constant [4 x i8] c"ok1\00"
@.string_id2 = constant [4 x i8] c"ok2\00"
@.string_id3 = constant [4 x i8] c"ok3\00"
@.string_id4 = constant [4 x i8] c"ok4\00"
@.string_id5 = constant [4 x i8] c"ok5\00"
@.string_id6 = constant [4 x i8] c"ok6\00"
@.string_id7 = constant [8 x i8] c"not ok7\00"
@.string_id8 = constant [8 x i8] c"not ok8\00"
@.string_id9 = constant [4 x i8] c"ok9\00"
@.string_id10 = constant [4 x i8] c"k10\00"
define void@test(i32){
%sp = alloca [50 x i32]
br label %parse_label_3
parse_label_3:
%reg1 = add i32 0, %0
%reg2 = icmp eq i32 %reg1,  0
br i1 %reg2, label %statement_7, label %func_end_12
statement_7:
%str_ptr_reg3 = getelementptr [5 x i8], [5 x i8]* @.string_id0, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg3)
br label %func_end_12
br label %func_end_12
func_end_12:
ret void
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_18
statement_18:
call void(i32) @test(i32  0)
br label %parse_label_21
parse_label_21:
%reg4 = icmp eq i32  1,  1
br i1 %reg4, label %parse_label_24, label %parse_label_31
parse_label_24:
%reg5 = icmp eq i32  1,  1
br i1 %reg5, label %statement_27, label %parse_label_31
statement_27:
%str_ptr_reg6 = getelementptr [4 x i8], [4 x i8]* @.string_id1, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg6)
br label %parse_label_31
parse_label_31:
%reg7 = icmp eq i32  1,  1
br i1 %reg7, label %statement_34, label %statement_49
statement_34:
%reg8 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32  0, i32* %reg8
br label %parse_label_38
parse_label_38:
%reg9 = icmp eq i32  1,  1
br i1 %reg9, label %statement_41, label %statement_45
statement_41:
%str_ptr_reg10 = getelementptr [4 x i8], [4 x i8]* @.string_id2, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg10)
br label %statement_45
statement_45:
%reg11 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32  0, i32* %reg11
br label %statement_49
statement_49:
br label %true_case_51
true_case_51:
br label %set_bool_reg_55
false_case_53:
br label %set_bool_reg_55
set_bool_reg_55:
%reg12 = phi i32 [1, %true_case_51], [0, %false_case_53]
%reg13 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg12, i32* %reg13
br label %parse_label_60
parse_label_60:
%param_ptr14 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw15 = load i32, i32* %param_ptr14
%reg16 = trunc i32 %param_raw15 to i1
br i1 %reg16, label %true_case_65, label %false_case_67
true_case_65:
br label %statement_69
false_case_67:
br label %parse_label_73
statement_69:
%str_ptr_reg17 = getelementptr [4 x i8], [4 x i8]* @.string_id3, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg17)
br label %parse_label_73
parse_label_73:
br label %statement_75
statement_75:
%str_ptr_reg18 = getelementptr [4 x i8], [4 x i8]* @.string_id4, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg18)
br label %parse_label_79
parse_label_79:
br label %parse_label_81
parse_label_81:
br label %statement_83
statement_83:
%str_ptr_reg19 = getelementptr [4 x i8], [4 x i8]* @.string_id5, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg19)
br label %parse_label_101
statement_87:
%str_ptr_reg20 = getelementptr [4 x i8], [4 x i8]* @.string_id6, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg20)
br label %parse_label_101
parse_label_91:
br label %statement_93
statement_93:
%str_ptr_reg21 = getelementptr [8 x i8], [8 x i8]* @.string_id7, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg21)
br label %parse_label_101
statement_97:
%str_ptr_reg22 = getelementptr [8 x i8], [8 x i8]* @.string_id8, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg22)
br label %parse_label_101
parse_label_101:
br label %parse_label_103
parse_label_103:
br label %statement_109
statement_105:
%str_ptr_reg23 = getelementptr [4 x i8], [4 x i8]* @.string_id9, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg23)
br label %statement_113
statement_109:
%str_ptr_reg24 = getelementptr [4 x i8], [4 x i8]* @.string_id10, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg24)
br label %statement_113
statement_113:
ret void
br label %func_end_116
func_end_116:
ret void
}
