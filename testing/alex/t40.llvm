declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
@.string_id0 = constant [5 x i8] c"true\00"
@.string_id1 = constant [6 x i8] c"false\00"
define void@printBool(i32){
%sp = alloca [50 x i32]
br label %parse_label_3
parse_label_3:
%reg1 = trunc i32 %0 to i1
br i1 %reg1, label %true_case_6, label %false_case_8
true_case_6:
br label %statement_10
false_case_8:
br label %statement_14
statement_10:
%str_ptr_reg2 = getelementptr [5 x i8], [5 x i8]* @.string_id0, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg2)
br label %func_end_19
statement_14:
%str_ptr_reg3 = getelementptr [6 x i8], [6 x i8]* @.string_id1, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg3)
br label %func_end_19
br label %func_end_19
func_end_19:
ret void
}
define i1@True(){
%sp = alloca [50 x i32]
br label %statement_25
statement_25:
br label %true_case_27
true_case_27:
br label %set_bool_reg_31
false_case_29:
br label %set_bool_reg_31
set_bool_reg_31:
%reg4 = phi i1 [1, %true_case_27], [0, %false_case_29]
ret i1 %reg4
br label %func_end_35
func_end_35:
ret i1 0
}
define i1@False(){
%sp = alloca [50 x i32]
br label %statement_41
statement_41:
br label %false_case_45
true_case_43:
br label %set_bool_reg_47
false_case_45:
br label %set_bool_reg_47
set_bool_reg_47:
%reg5 = phi i1 [1, %true_case_43], [0, %false_case_45]
ret i1 %reg5
br label %func_end_51
func_end_51:
ret i1 0
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_57
statement_57:
br label %true_case_59
true_case_59:
br label %set_bool_reg_63
false_case_61:
br label %set_bool_reg_63
set_bool_reg_63:
%reg6 = phi i32 [1, %true_case_59], [0, %false_case_61]
%reg7 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg6, i32* %reg7
br label %statement_68
statement_68:
br label %false_case_72
true_case_70:
br label %set_bool_reg_74
false_case_72:
br label %set_bool_reg_74
set_bool_reg_74:
%reg8 = phi i32 [1, %true_case_70], [0, %false_case_72]
%reg9 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 %reg8, i32* %reg9
br label %statement_79
statement_79:
%reg10 = call i1() @True()
br i1 %reg10, label %true_case_82, label %false_case_84
true_case_82:
br label %false_case_88
false_case_84:
br label %true_case_86
true_case_86:
br label %set_bool_reg_90
false_case_88:
br label %set_bool_reg_90
set_bool_reg_90:
%reg11 = phi i32 [1, %true_case_86], [0, %false_case_88]
%reg12 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
store i32 %reg11, i32* %reg12
br label %statement_95
statement_95:
%param_ptr13 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
%param_raw14 = load i32, i32* %param_ptr13
%reg15 = trunc i32 %param_raw14 to i1
br i1 %reg15, label %true_case_100, label %false_case_102
true_case_100:
br label %true_case_104
false_case_102:
br label %false_case_106
true_case_104:
br label %set_bool_reg_108
false_case_106:
br label %set_bool_reg_108
set_bool_reg_108:
%reg16 = phi i32 [1, %true_case_104], [0, %false_case_106]
%reg17 = add i32 0, %reg16
call void(i32) @printBool(i32 %reg17)
br label %statement_113
statement_113:
br label %false_case_117
true_case_115:
br label %set_bool_reg_119
false_case_117:
br label %set_bool_reg_119
set_bool_reg_119:
%reg18 = phi i32 [1, %true_case_115], [0, %false_case_117]
%reg19 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 3
store i32 %reg18, i32* %reg19
br label %statement_124
statement_124:
%param_ptr20 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 3
%param_raw21 = load i32, i32* %param_ptr20
%reg22 = trunc i32 %param_raw21 to i1
br i1 %reg22, label %true_case_129, label %false_case_131
true_case_129:
br label %true_case_133
false_case_131:
br label %false_case_135
true_case_133:
br label %set_bool_reg_137
false_case_135:
br label %set_bool_reg_137
set_bool_reg_137:
%reg23 = phi i32 [1, %true_case_133], [0, %false_case_135]
%reg24 = add i32 0, %reg23
call void(i32) @printBool(i32 %reg24)
br label %statement_142
statement_142:
%param_ptr25 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw26 = load i32, i32* %param_ptr25
%reg27 = trunc i32 %param_raw26 to i1
br i1 %reg27, label %true_case_147, label %false_case_149
true_case_147:
br label %false_case_153
false_case_149:
br label %true_case_151
true_case_151:
br label %set_bool_reg_155
false_case_153:
br label %set_bool_reg_155
set_bool_reg_155:
%reg28 = phi i32 [1, %true_case_151], [0, %false_case_153]
%reg29 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 4
store i32 %reg28, i32* %reg29
br label %statement_160
statement_160:
%param_ptr30 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 4
%param_raw31 = load i32, i32* %param_ptr30
%reg32 = trunc i32 %param_raw31 to i1
br i1 %reg32, label %true_case_165, label %false_case_167
true_case_165:
br label %true_case_169
false_case_167:
br label %false_case_171
true_case_169:
br label %set_bool_reg_173
false_case_171:
br label %set_bool_reg_173
set_bool_reg_173:
%reg33 = phi i32 [1, %true_case_169], [0, %false_case_171]
%reg34 = add i32 0, %reg33
call void(i32) @printBool(i32 %reg34)
br label %statement_178
statement_178:
%reg35 = icmp slt i32 4, 5
br i1 %reg35, label %false_case_183, label %true_case_181
true_case_181:
br label %set_bool_reg_185
false_case_183:
br label %set_bool_reg_185
set_bool_reg_185:
%reg36 = phi i32 [1, %true_case_181], [0, %false_case_183]
%reg37 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 5
store i32 %reg36, i32* %reg37
br label %statement_190
statement_190:
%param_ptr38 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 5
%param_raw39 = load i32, i32* %param_ptr38
%reg40 = trunc i32 %param_raw39 to i1
br i1 %reg40, label %true_case_195, label %false_case_197
true_case_195:
br label %true_case_199
false_case_197:
br label %false_case_201
true_case_199:
br label %set_bool_reg_203
false_case_201:
br label %set_bool_reg_203
set_bool_reg_203:
%reg41 = phi i32 [1, %true_case_199], [0, %false_case_201]
%reg42 = add i32 0, %reg41
call void(i32) @printBool(i32 %reg42)
br label %statement_208
statement_208:
%reg43 = icmp eq i32 4, 4
br i1 %reg43, label %false_case_213, label %true_case_211
true_case_211:
br label %set_bool_reg_215
false_case_213:
br label %set_bool_reg_215
set_bool_reg_215:
%reg44 = phi i32 [1, %true_case_211], [0, %false_case_213]
%reg45 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 6
store i32 %reg44, i32* %reg45
br label %statement_220
statement_220:
%param_ptr46 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 6
%param_raw47 = load i32, i32* %param_ptr46
%reg48 = trunc i32 %param_raw47 to i1
br i1 %reg48, label %true_case_225, label %false_case_227
true_case_225:
br label %true_case_229
false_case_227:
br label %false_case_231
true_case_229:
br label %set_bool_reg_233
false_case_231:
br label %set_bool_reg_233
set_bool_reg_233:
%reg49 = phi i32 [1, %true_case_229], [0, %false_case_231]
%reg50 = add i32 0, %reg49
call void(i32) @printBool(i32 %reg50)
br label %statement_238
statement_238:
%reg51 = call i1() @False()
br i1 %reg51, label %true_case_241, label %false_case_243
true_case_241:
br label %false_case_247
false_case_243:
br label %true_case_245
true_case_245:
br label %set_bool_reg_249
false_case_247:
br label %set_bool_reg_249
set_bool_reg_249:
%reg52 = phi i32 [1, %true_case_245], [0, %false_case_247]
%reg53 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 7
store i32 %reg52, i32* %reg53
br label %statement_254
statement_254:
%param_ptr54 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 7
%param_raw55 = load i32, i32* %param_ptr54
%reg56 = trunc i32 %param_raw55 to i1
br i1 %reg56, label %true_case_259, label %false_case_261
true_case_259:
br label %true_case_263
false_case_261:
br label %false_case_265
true_case_263:
br label %set_bool_reg_267
false_case_265:
br label %set_bool_reg_267
set_bool_reg_267:
%reg57 = phi i32 [1, %true_case_263], [0, %false_case_265]
%reg58 = add i32 0, %reg57
call void(i32) @printBool(i32 %reg58)
br label %statement_272
statement_272:
br label %true_case_274
true_case_274:
br label %set_bool_reg_278
false_case_276:
br label %set_bool_reg_278
set_bool_reg_278:
%reg59 = phi i32 [1, %true_case_274], [0, %false_case_276]
%reg60 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 8
store i32 %reg59, i32* %reg60
br label %statement_283
statement_283:
%param_ptr61 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 8
%param_raw62 = load i32, i32* %param_ptr61
%reg63 = trunc i32 %param_raw62 to i1
br i1 %reg63, label %true_case_288, label %false_case_290
true_case_288:
br label %true_case_292
false_case_290:
br label %false_case_294
true_case_292:
br label %set_bool_reg_296
false_case_294:
br label %set_bool_reg_296
set_bool_reg_296:
%reg64 = phi i32 [1, %true_case_292], [0, %false_case_294]
%reg65 = add i32 0, %reg64
call void(i32) @printBool(i32 %reg65)
br label %statement_301
statement_301:
%param_ptr66 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw67 = load i32, i32* %param_ptr66
%reg68 = trunc i32 %param_raw67 to i1
br i1 %reg68, label %true_case_306, label %false_case_308
true_case_306:
br label %false_case_312
false_case_308:
br label %true_case_310
true_case_310:
br label %set_bool_reg_314
false_case_312:
br label %set_bool_reg_314
set_bool_reg_314:
%reg69 = phi i32 [1, %true_case_310], [0, %false_case_312]
%reg70 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 9
store i32 %reg69, i32* %reg70
br label %statement_319
statement_319:
%param_ptr71 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 9
%param_raw72 = load i32, i32* %param_ptr71
%reg73 = trunc i32 %param_raw72 to i1
br i1 %reg73, label %true_case_324, label %false_case_326
true_case_324:
br label %true_case_328
false_case_326:
br label %false_case_330
true_case_328:
br label %set_bool_reg_332
false_case_330:
br label %set_bool_reg_332
set_bool_reg_332:
%reg74 = phi i32 [1, %true_case_328], [0, %false_case_330]
%reg75 = add i32 0, %reg74
call void(i32) @printBool(i32 %reg75)
br label %statement_337
statement_337:
%reg76 = icmp sgt i32 4, 5
br i1 %reg76, label %false_case_342, label %true_case_340
true_case_340:
br label %set_bool_reg_344
false_case_342:
br label %set_bool_reg_344
set_bool_reg_344:
%reg77 = phi i32 [1, %true_case_340], [0, %false_case_342]
%reg78 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 10
store i32 %reg77, i32* %reg78
br label %statement_349
statement_349:
%param_ptr79 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 10
%param_raw80 = load i32, i32* %param_ptr79
%reg81 = trunc i32 %param_raw80 to i1
br i1 %reg81, label %true_case_354, label %false_case_356
true_case_354:
br label %true_case_358
false_case_356:
br label %false_case_360
true_case_358:
br label %set_bool_reg_362
false_case_360:
br label %set_bool_reg_362
set_bool_reg_362:
%reg82 = phi i32 [1, %true_case_358], [0, %false_case_360]
%reg83 = add i32 0, %reg82
call void(i32) @printBool(i32 %reg83)
br label %statement_367
statement_367:
%reg84 = icmp ne i32 4, 4
br i1 %reg84, label %false_case_372, label %true_case_370
true_case_370:
br label %set_bool_reg_374
false_case_372:
br label %set_bool_reg_374
set_bool_reg_374:
%reg85 = phi i32 [1, %true_case_370], [0, %false_case_372]
%reg86 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 11
store i32 %reg85, i32* %reg86
br label %statement_379
statement_379:
%param_ptr87 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 11
%param_raw88 = load i32, i32* %param_ptr87
%reg89 = trunc i32 %param_raw88 to i1
br i1 %reg89, label %true_case_384, label %false_case_386
true_case_384:
br label %true_case_388
false_case_386:
br label %false_case_390
true_case_388:
br label %set_bool_reg_392
false_case_390:
br label %set_bool_reg_392
set_bool_reg_392:
%reg90 = phi i32 [1, %true_case_388], [0, %false_case_390]
%reg91 = add i32 0, %reg90
call void(i32) @printBool(i32 %reg91)
br label %statement_397
statement_397:
%reg92 = call i1() @True()
br i1 %reg92, label %true_case_400, label %false_case_402
true_case_400:
br label %parse_label_404
false_case_402:
br label %true_case_411
parse_label_404:
%reg93 = call i1() @False()
br i1 %reg93, label %true_case_407, label %false_case_409
true_case_407:
br label %false_case_413
false_case_409:
br label %true_case_411
true_case_411:
br label %set_bool_reg_415
false_case_413:
br label %set_bool_reg_415
set_bool_reg_415:
%reg94 = phi i32 [1, %true_case_411], [0, %false_case_413]
%reg95 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 12
store i32 %reg94, i32* %reg95
br label %statement_420
statement_420:
%param_ptr96 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 12
%param_raw97 = load i32, i32* %param_ptr96
%reg98 = trunc i32 %param_raw97 to i1
br i1 %reg98, label %true_case_425, label %false_case_427
true_case_425:
br label %true_case_429
false_case_427:
br label %false_case_431
true_case_429:
br label %set_bool_reg_433
false_case_431:
br label %set_bool_reg_433
set_bool_reg_433:
%reg99 = phi i32 [1, %true_case_429], [0, %false_case_431]
%reg100 = add i32 0, %reg99
call void(i32) @printBool(i32 %reg100)
br label %statement_438
statement_438:
%reg101 = call i1() @True()
br i1 %reg101, label %true_case_441, label %false_case_443
true_case_441:
br label %parse_label_445
false_case_443:
br label %true_case_447
parse_label_445:
br label %true_case_447
true_case_447:
br label %set_bool_reg_451
false_case_449:
br label %set_bool_reg_451
set_bool_reg_451:
%reg102 = phi i32 [1, %true_case_447], [0, %false_case_449]
%reg103 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 13
store i32 %reg102, i32* %reg103
br label %statement_456
statement_456:
%param_ptr104 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 13
%param_raw105 = load i32, i32* %param_ptr104
%reg106 = trunc i32 %param_raw105 to i1
br i1 %reg106, label %true_case_461, label %false_case_463
true_case_461:
br label %true_case_465
false_case_463:
br label %false_case_467
true_case_465:
br label %set_bool_reg_469
false_case_467:
br label %set_bool_reg_469
set_bool_reg_469:
%reg107 = phi i32 [1, %true_case_465], [0, %false_case_467]
%reg108 = add i32 0, %reg107
call void(i32) @printBool(i32 %reg108)
br label %statement_474
statement_474:
%reg109 = call i1() @True()
br i1 %reg109, label %true_case_477, label %false_case_479
true_case_477:
br label %parse_label_481
false_case_479:
br label %true_case_490
parse_label_481:
%param_ptr110 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw111 = load i32, i32* %param_ptr110
%reg112 = trunc i32 %param_raw111 to i1
br i1 %reg112, label %true_case_486, label %false_case_488
true_case_486:
br label %false_case_492
false_case_488:
br label %true_case_490
true_case_490:
br label %set_bool_reg_494
false_case_492:
br label %set_bool_reg_494
set_bool_reg_494:
%reg113 = phi i32 [1, %true_case_490], [0, %false_case_492]
%reg114 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 14
store i32 %reg113, i32* %reg114
br label %statement_499
statement_499:
%param_ptr115 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 14
%param_raw116 = load i32, i32* %param_ptr115
%reg117 = trunc i32 %param_raw116 to i1
br i1 %reg117, label %true_case_504, label %false_case_506
true_case_504:
br label %true_case_508
false_case_506:
br label %false_case_510
true_case_508:
br label %set_bool_reg_512
false_case_510:
br label %set_bool_reg_512
set_bool_reg_512:
%reg118 = phi i32 [1, %true_case_508], [0, %false_case_510]
%reg119 = add i32 0, %reg118
call void(i32) @printBool(i32 %reg119)
br label %statement_517
statement_517:
%reg120 = call i1() @True()
br i1 %reg120, label %true_case_520, label %false_case_522
true_case_520:
br label %parse_label_524
false_case_522:
br label %true_case_527
parse_label_524:
%reg121 = icmp sgt i32 4, 5
br i1 %reg121, label %false_case_529, label %true_case_527
true_case_527:
br label %set_bool_reg_531
false_case_529:
br label %set_bool_reg_531
set_bool_reg_531:
%reg122 = phi i32 [1, %true_case_527], [0, %false_case_529]
%reg123 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 15
store i32 %reg122, i32* %reg123
br label %statement_536
statement_536:
%param_ptr124 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 15
%param_raw125 = load i32, i32* %param_ptr124
%reg126 = trunc i32 %param_raw125 to i1
br i1 %reg126, label %true_case_541, label %false_case_543
true_case_541:
br label %true_case_545
false_case_543:
br label %false_case_547
true_case_545:
br label %set_bool_reg_549
false_case_547:
br label %set_bool_reg_549
set_bool_reg_549:
%reg127 = phi i32 [1, %true_case_545], [0, %false_case_547]
%reg128 = add i32 0, %reg127
call void(i32) @printBool(i32 %reg128)
br label %statement_554
statement_554:
%reg129 = call i1() @True()
br i1 %reg129, label %true_case_557, label %false_case_559
true_case_557:
br label %parse_label_561
false_case_559:
br label %true_case_564
parse_label_561:
%reg130 = icmp ne i32 4, 4
br i1 %reg130, label %false_case_566, label %true_case_564
true_case_564:
br label %set_bool_reg_568
false_case_566:
br label %set_bool_reg_568
set_bool_reg_568:
%reg131 = phi i32 [1, %true_case_564], [0, %false_case_566]
%reg132 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 16
store i32 %reg131, i32* %reg132
br label %statement_573
statement_573:
%param_ptr133 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 16
%param_raw134 = load i32, i32* %param_ptr133
%reg135 = trunc i32 %param_raw134 to i1
br i1 %reg135, label %true_case_578, label %false_case_580
true_case_578:
br label %true_case_582
false_case_580:
br label %false_case_584
true_case_582:
br label %set_bool_reg_586
false_case_584:
br label %set_bool_reg_586
set_bool_reg_586:
%reg136 = phi i32 [1, %true_case_582], [0, %false_case_584]
%reg137 = add i32 0, %reg136
call void(i32) @printBool(i32 %reg137)
br label %statement_591
statement_591:
br label %parse_label_593
parse_label_593:
%reg138 = call i1() @False()
br i1 %reg138, label %true_case_596, label %false_case_598
true_case_596:
br label %false_case_602
false_case_598:
br label %true_case_600
true_case_600:
br label %set_bool_reg_604
false_case_602:
br label %set_bool_reg_604
set_bool_reg_604:
%reg139 = phi i32 [1, %true_case_600], [0, %false_case_602]
%reg140 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 17
store i32 %reg139, i32* %reg140
br label %statement_609
statement_609:
%param_ptr141 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 17
%param_raw142 = load i32, i32* %param_ptr141
%reg143 = trunc i32 %param_raw142 to i1
br i1 %reg143, label %true_case_614, label %false_case_616
true_case_614:
br label %true_case_618
false_case_616:
br label %false_case_620
true_case_618:
br label %set_bool_reg_622
false_case_620:
br label %set_bool_reg_622
set_bool_reg_622:
%reg144 = phi i32 [1, %true_case_618], [0, %false_case_620]
%reg145 = add i32 0, %reg144
call void(i32) @printBool(i32 %reg145)
br label %statement_627
statement_627:
br label %parse_label_629
parse_label_629:
br label %true_case_631
true_case_631:
br label %set_bool_reg_635
false_case_633:
br label %set_bool_reg_635
set_bool_reg_635:
%reg146 = phi i32 [1, %true_case_631], [0, %false_case_633]
%reg147 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 18
store i32 %reg146, i32* %reg147
br label %statement_640
statement_640:
%param_ptr148 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 18
%param_raw149 = load i32, i32* %param_ptr148
%reg150 = trunc i32 %param_raw149 to i1
br i1 %reg150, label %true_case_645, label %false_case_647
true_case_645:
br label %true_case_649
false_case_647:
br label %false_case_651
true_case_649:
br label %set_bool_reg_653
false_case_651:
br label %set_bool_reg_653
set_bool_reg_653:
%reg151 = phi i32 [1, %true_case_649], [0, %false_case_651]
%reg152 = add i32 0, %reg151
call void(i32) @printBool(i32 %reg152)
br label %statement_658
statement_658:
br label %parse_label_660
parse_label_660:
%param_ptr153 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw154 = load i32, i32* %param_ptr153
%reg155 = trunc i32 %param_raw154 to i1
br i1 %reg155, label %true_case_665, label %false_case_667
true_case_665:
br label %false_case_671
false_case_667:
br label %true_case_669
true_case_669:
br label %set_bool_reg_673
false_case_671:
br label %set_bool_reg_673
set_bool_reg_673:
%reg156 = phi i32 [1, %true_case_669], [0, %false_case_671]
%reg157 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 19
store i32 %reg156, i32* %reg157
br label %statement_678
statement_678:
%param_ptr158 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 19
%param_raw159 = load i32, i32* %param_ptr158
%reg160 = trunc i32 %param_raw159 to i1
br i1 %reg160, label %true_case_683, label %false_case_685
true_case_683:
br label %true_case_687
false_case_685:
br label %false_case_689
true_case_687:
br label %set_bool_reg_691
false_case_689:
br label %set_bool_reg_691
set_bool_reg_691:
%reg161 = phi i32 [1, %true_case_687], [0, %false_case_689]
%reg162 = add i32 0, %reg161
call void(i32) @printBool(i32 %reg162)
br label %statement_696
statement_696:
br label %parse_label_698
parse_label_698:
%reg163 = icmp sgt i32 4, 5
br i1 %reg163, label %false_case_703, label %true_case_701
true_case_701:
br label %set_bool_reg_705
false_case_703:
br label %set_bool_reg_705
set_bool_reg_705:
%reg164 = phi i32 [1, %true_case_701], [0, %false_case_703]
%reg165 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 20
store i32 %reg164, i32* %reg165
br label %statement_710
statement_710:
%param_ptr166 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 20
%param_raw167 = load i32, i32* %param_ptr166
%reg168 = trunc i32 %param_raw167 to i1
br i1 %reg168, label %true_case_715, label %false_case_717
true_case_715:
br label %true_case_719
false_case_717:
br label %false_case_721
true_case_719:
br label %set_bool_reg_723
false_case_721:
br label %set_bool_reg_723
set_bool_reg_723:
%reg169 = phi i32 [1, %true_case_719], [0, %false_case_721]
%reg170 = add i32 0, %reg169
call void(i32) @printBool(i32 %reg170)
br label %statement_728
statement_728:
br label %parse_label_730
parse_label_730:
%reg171 = icmp ne i32 4, 4
br i1 %reg171, label %false_case_735, label %true_case_733
true_case_733:
br label %set_bool_reg_737
false_case_735:
br label %set_bool_reg_737
set_bool_reg_737:
%reg172 = phi i32 [1, %true_case_733], [0, %false_case_735]
%reg173 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 21
store i32 %reg172, i32* %reg173
br label %statement_742
statement_742:
%param_ptr174 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 21
%param_raw175 = load i32, i32* %param_ptr174
%reg176 = trunc i32 %param_raw175 to i1
br i1 %reg176, label %true_case_747, label %false_case_749
true_case_747:
br label %true_case_751
false_case_749:
br label %false_case_753
true_case_751:
br label %set_bool_reg_755
false_case_753:
br label %set_bool_reg_755
set_bool_reg_755:
%reg177 = phi i32 [1, %true_case_751], [0, %false_case_753]
%reg178 = add i32 0, %reg177
call void(i32) @printBool(i32 %reg178)
br label %statement_760
statement_760:
%param_ptr179 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw180 = load i32, i32* %param_ptr179
%reg181 = trunc i32 %param_raw180 to i1
br i1 %reg181, label %true_case_765, label %false_case_767
true_case_765:
br label %parse_label_769
false_case_767:
br label %true_case_776
parse_label_769:
%reg182 = call i1() @False()
br i1 %reg182, label %true_case_772, label %false_case_774
true_case_772:
br label %false_case_778
false_case_774:
br label %true_case_776
true_case_776:
br label %set_bool_reg_780
false_case_778:
br label %set_bool_reg_780
set_bool_reg_780:
%reg183 = phi i32 [1, %true_case_776], [0, %false_case_778]
%reg184 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 22
store i32 %reg183, i32* %reg184
br label %statement_785
statement_785:
%param_ptr185 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 22
%param_raw186 = load i32, i32* %param_ptr185
%reg187 = trunc i32 %param_raw186 to i1
br i1 %reg187, label %true_case_790, label %false_case_792
true_case_790:
br label %true_case_794
false_case_792:
br label %false_case_796
true_case_794:
br label %set_bool_reg_798
false_case_796:
br label %set_bool_reg_798
set_bool_reg_798:
%reg188 = phi i32 [1, %true_case_794], [0, %false_case_796]
%reg189 = add i32 0, %reg188
call void(i32) @printBool(i32 %reg189)
br label %statement_803
statement_803:
%param_ptr190 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw191 = load i32, i32* %param_ptr190
%reg192 = trunc i32 %param_raw191 to i1
br i1 %reg192, label %true_case_808, label %false_case_810
true_case_808:
br label %parse_label_812
false_case_810:
br label %true_case_814
parse_label_812:
br label %true_case_814
true_case_814:
br label %set_bool_reg_818
false_case_816:
br label %set_bool_reg_818
set_bool_reg_818:
%reg193 = phi i32 [1, %true_case_814], [0, %false_case_816]
%reg194 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 23
store i32 %reg193, i32* %reg194
br label %statement_823
statement_823:
%param_ptr195 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 23
%param_raw196 = load i32, i32* %param_ptr195
%reg197 = trunc i32 %param_raw196 to i1
br i1 %reg197, label %true_case_828, label %false_case_830
true_case_828:
br label %true_case_832
false_case_830:
br label %false_case_834
true_case_832:
br label %set_bool_reg_836
false_case_834:
br label %set_bool_reg_836
set_bool_reg_836:
%reg198 = phi i32 [1, %true_case_832], [0, %false_case_834]
%reg199 = add i32 0, %reg198
call void(i32) @printBool(i32 %reg199)
br label %statement_841
statement_841:
%param_ptr200 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw201 = load i32, i32* %param_ptr200
%reg202 = trunc i32 %param_raw201 to i1
br i1 %reg202, label %true_case_846, label %false_case_848
true_case_846:
br label %parse_label_850
false_case_848:
br label %true_case_859
parse_label_850:
%param_ptr203 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw204 = load i32, i32* %param_ptr203
%reg205 = trunc i32 %param_raw204 to i1
br i1 %reg205, label %true_case_855, label %false_case_857
true_case_855:
br label %false_case_861
false_case_857:
br label %true_case_859
true_case_859:
br label %set_bool_reg_863
false_case_861:
br label %set_bool_reg_863
set_bool_reg_863:
%reg206 = phi i32 [1, %true_case_859], [0, %false_case_861]
%reg207 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 24
store i32 %reg206, i32* %reg207
br label %statement_868
statement_868:
%param_ptr208 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 24
%param_raw209 = load i32, i32* %param_ptr208
%reg210 = trunc i32 %param_raw209 to i1
br i1 %reg210, label %true_case_873, label %false_case_875
true_case_873:
br label %true_case_877
false_case_875:
br label %false_case_879
true_case_877:
br label %set_bool_reg_881
false_case_879:
br label %set_bool_reg_881
set_bool_reg_881:
%reg211 = phi i32 [1, %true_case_877], [0, %false_case_879]
%reg212 = add i32 0, %reg211
call void(i32) @printBool(i32 %reg212)
br label %statement_886
statement_886:
%param_ptr213 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw214 = load i32, i32* %param_ptr213
%reg215 = trunc i32 %param_raw214 to i1
br i1 %reg215, label %true_case_891, label %false_case_893
true_case_891:
br label %parse_label_895
false_case_893:
br label %true_case_898
parse_label_895:
%reg216 = icmp sgt i32 4, 5
br i1 %reg216, label %false_case_900, label %true_case_898
true_case_898:
br label %set_bool_reg_902
false_case_900:
br label %set_bool_reg_902
set_bool_reg_902:
%reg217 = phi i32 [1, %true_case_898], [0, %false_case_900]
%reg218 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 25
store i32 %reg217, i32* %reg218
br label %statement_907
statement_907:
%param_ptr219 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 25
%param_raw220 = load i32, i32* %param_ptr219
%reg221 = trunc i32 %param_raw220 to i1
br i1 %reg221, label %true_case_912, label %false_case_914
true_case_912:
br label %true_case_916
false_case_914:
br label %false_case_918
true_case_916:
br label %set_bool_reg_920
false_case_918:
br label %set_bool_reg_920
set_bool_reg_920:
%reg222 = phi i32 [1, %true_case_916], [0, %false_case_918]
%reg223 = add i32 0, %reg222
call void(i32) @printBool(i32 %reg223)
br label %statement_925
statement_925:
%param_ptr224 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw225 = load i32, i32* %param_ptr224
%reg226 = trunc i32 %param_raw225 to i1
br i1 %reg226, label %true_case_930, label %false_case_932
true_case_930:
br label %parse_label_934
false_case_932:
br label %true_case_937
parse_label_934:
%reg227 = icmp ne i32 4, 4
br i1 %reg227, label %false_case_939, label %true_case_937
true_case_937:
br label %set_bool_reg_941
false_case_939:
br label %set_bool_reg_941
set_bool_reg_941:
%reg228 = phi i32 [1, %true_case_937], [0, %false_case_939]
%reg229 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 26
store i32 %reg228, i32* %reg229
br label %statement_946
statement_946:
%param_ptr230 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 26
%param_raw231 = load i32, i32* %param_ptr230
%reg232 = trunc i32 %param_raw231 to i1
br i1 %reg232, label %true_case_951, label %false_case_953
true_case_951:
br label %true_case_955
false_case_953:
br label %false_case_957
true_case_955:
br label %set_bool_reg_959
false_case_957:
br label %set_bool_reg_959
set_bool_reg_959:
%reg233 = phi i32 [1, %true_case_955], [0, %false_case_957]
%reg234 = add i32 0, %reg233
call void(i32) @printBool(i32 %reg234)
br label %statement_964
statement_964:
%reg235 = icmp slt i32 4, 5
br i1 %reg235, label %parse_label_967, label %true_case_974
parse_label_967:
%reg236 = call i1() @False()
br i1 %reg236, label %true_case_970, label %false_case_972
true_case_970:
br label %false_case_976
false_case_972:
br label %true_case_974
true_case_974:
br label %set_bool_reg_978
false_case_976:
br label %set_bool_reg_978
set_bool_reg_978:
%reg237 = phi i32 [1, %true_case_974], [0, %false_case_976]
%reg238 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 27
store i32 %reg237, i32* %reg238
br label %statement_983
statement_983:
%param_ptr239 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 27
%param_raw240 = load i32, i32* %param_ptr239
%reg241 = trunc i32 %param_raw240 to i1
br i1 %reg241, label %true_case_988, label %false_case_990
true_case_988:
br label %true_case_992
false_case_990:
br label %false_case_994
true_case_992:
br label %set_bool_reg_996
false_case_994:
br label %set_bool_reg_996
set_bool_reg_996:
%reg242 = phi i32 [1, %true_case_992], [0, %false_case_994]
%reg243 = add i32 0, %reg242
call void(i32) @printBool(i32 %reg243)
br label %statement_1001
statement_1001:
%reg244 = icmp slt i32 4, 5
br i1 %reg244, label %parse_label_1004, label %true_case_1006
parse_label_1004:
br label %true_case_1006
true_case_1006:
br label %set_bool_reg_1010
false_case_1008:
br label %set_bool_reg_1010
set_bool_reg_1010:
%reg245 = phi i32 [1, %true_case_1006], [0, %false_case_1008]
%reg246 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 28
store i32 %reg245, i32* %reg246
br label %statement_1015
statement_1015:
%param_ptr247 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 28
%param_raw248 = load i32, i32* %param_ptr247
%reg249 = trunc i32 %param_raw248 to i1
br i1 %reg249, label %true_case_1020, label %false_case_1022
true_case_1020:
br label %true_case_1024
false_case_1022:
br label %false_case_1026
true_case_1024:
br label %set_bool_reg_1028
false_case_1026:
br label %set_bool_reg_1028
set_bool_reg_1028:
%reg250 = phi i32 [1, %true_case_1024], [0, %false_case_1026]
%reg251 = add i32 0, %reg250
call void(i32) @printBool(i32 %reg251)
br label %statement_1033
statement_1033:
%reg252 = icmp slt i32 4, 5
br i1 %reg252, label %parse_label_1036, label %true_case_1045
parse_label_1036:
%param_ptr253 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw254 = load i32, i32* %param_ptr253
%reg255 = trunc i32 %param_raw254 to i1
br i1 %reg255, label %true_case_1041, label %false_case_1043
true_case_1041:
br label %false_case_1047
false_case_1043:
br label %true_case_1045
true_case_1045:
br label %set_bool_reg_1049
false_case_1047:
br label %set_bool_reg_1049
set_bool_reg_1049:
%reg256 = phi i32 [1, %true_case_1045], [0, %false_case_1047]
%reg257 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 29
store i32 %reg256, i32* %reg257
br label %statement_1054
statement_1054:
%param_ptr258 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 29
%param_raw259 = load i32, i32* %param_ptr258
%reg260 = trunc i32 %param_raw259 to i1
br i1 %reg260, label %true_case_1059, label %false_case_1061
true_case_1059:
br label %true_case_1063
false_case_1061:
br label %false_case_1065
true_case_1063:
br label %set_bool_reg_1067
false_case_1065:
br label %set_bool_reg_1067
set_bool_reg_1067:
%reg261 = phi i32 [1, %true_case_1063], [0, %false_case_1065]
%reg262 = add i32 0, %reg261
call void(i32) @printBool(i32 %reg262)
br label %statement_1072
statement_1072:
%reg263 = icmp slt i32 4, 5
br i1 %reg263, label %parse_label_1075, label %true_case_1078
parse_label_1075:
%reg264 = icmp sgt i32 4, 5
br i1 %reg264, label %false_case_1080, label %true_case_1078
true_case_1078:
br label %set_bool_reg_1082
false_case_1080:
br label %set_bool_reg_1082
set_bool_reg_1082:
%reg265 = phi i32 [1, %true_case_1078], [0, %false_case_1080]
%reg266 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 30
store i32 %reg265, i32* %reg266
br label %statement_1087
statement_1087:
%param_ptr267 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 30
%param_raw268 = load i32, i32* %param_ptr267
%reg269 = trunc i32 %param_raw268 to i1
br i1 %reg269, label %true_case_1092, label %false_case_1094
true_case_1092:
br label %true_case_1096
false_case_1094:
br label %false_case_1098
true_case_1096:
br label %set_bool_reg_1100
false_case_1098:
br label %set_bool_reg_1100
set_bool_reg_1100:
%reg270 = phi i32 [1, %true_case_1096], [0, %false_case_1098]
%reg271 = add i32 0, %reg270
call void(i32) @printBool(i32 %reg271)
br label %statement_1105
statement_1105:
%reg272 = icmp slt i32 4, 5
br i1 %reg272, label %parse_label_1108, label %true_case_1111
parse_label_1108:
%reg273 = icmp ne i32 4, 4
br i1 %reg273, label %false_case_1113, label %true_case_1111
true_case_1111:
br label %set_bool_reg_1115
false_case_1113:
br label %set_bool_reg_1115
set_bool_reg_1115:
%reg274 = phi i32 [1, %true_case_1111], [0, %false_case_1113]
%reg275 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 31
store i32 %reg274, i32* %reg275
br label %statement_1120
statement_1120:
%param_ptr276 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 31
%param_raw277 = load i32, i32* %param_ptr276
%reg278 = trunc i32 %param_raw277 to i1
br i1 %reg278, label %true_case_1125, label %false_case_1127
true_case_1125:
br label %true_case_1129
false_case_1127:
br label %false_case_1131
true_case_1129:
br label %set_bool_reg_1133
false_case_1131:
br label %set_bool_reg_1133
set_bool_reg_1133:
%reg279 = phi i32 [1, %true_case_1129], [0, %false_case_1131]
%reg280 = add i32 0, %reg279
call void(i32) @printBool(i32 %reg280)
br label %statement_1138
statement_1138:
%reg281 = icmp eq i32 4, 4
br i1 %reg281, label %parse_label_1141, label %true_case_1148
parse_label_1141:
%reg282 = call i1() @False()
br i1 %reg282, label %true_case_1144, label %false_case_1146
true_case_1144:
br label %false_case_1150
false_case_1146:
br label %true_case_1148
true_case_1148:
br label %set_bool_reg_1152
false_case_1150:
br label %set_bool_reg_1152
set_bool_reg_1152:
%reg283 = phi i32 [1, %true_case_1148], [0, %false_case_1150]
%reg284 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 32
store i32 %reg283, i32* %reg284
br label %statement_1157
statement_1157:
%param_ptr285 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 32
%param_raw286 = load i32, i32* %param_ptr285
%reg287 = trunc i32 %param_raw286 to i1
br i1 %reg287, label %true_case_1162, label %false_case_1164
true_case_1162:
br label %true_case_1166
false_case_1164:
br label %false_case_1168
true_case_1166:
br label %set_bool_reg_1170
false_case_1168:
br label %set_bool_reg_1170
set_bool_reg_1170:
%reg288 = phi i32 [1, %true_case_1166], [0, %false_case_1168]
%reg289 = add i32 0, %reg288
call void(i32) @printBool(i32 %reg289)
br label %statement_1175
statement_1175:
%reg290 = icmp eq i32 4, 4
br i1 %reg290, label %parse_label_1178, label %true_case_1180
parse_label_1178:
br label %true_case_1180
true_case_1180:
br label %set_bool_reg_1184
false_case_1182:
br label %set_bool_reg_1184
set_bool_reg_1184:
%reg291 = phi i32 [1, %true_case_1180], [0, %false_case_1182]
%reg292 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 33
store i32 %reg291, i32* %reg292
br label %statement_1189
statement_1189:
%param_ptr293 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 33
%param_raw294 = load i32, i32* %param_ptr293
%reg295 = trunc i32 %param_raw294 to i1
br i1 %reg295, label %true_case_1194, label %false_case_1196
true_case_1194:
br label %true_case_1198
false_case_1196:
br label %false_case_1200
true_case_1198:
br label %set_bool_reg_1202
false_case_1200:
br label %set_bool_reg_1202
set_bool_reg_1202:
%reg296 = phi i32 [1, %true_case_1198], [0, %false_case_1200]
%reg297 = add i32 0, %reg296
call void(i32) @printBool(i32 %reg297)
br label %statement_1207
statement_1207:
%reg298 = icmp eq i32 4, 4
br i1 %reg298, label %parse_label_1210, label %true_case_1219
parse_label_1210:
%param_ptr299 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw300 = load i32, i32* %param_ptr299
%reg301 = trunc i32 %param_raw300 to i1
br i1 %reg301, label %true_case_1215, label %false_case_1217
true_case_1215:
br label %false_case_1221
false_case_1217:
br label %true_case_1219
true_case_1219:
br label %set_bool_reg_1223
false_case_1221:
br label %set_bool_reg_1223
set_bool_reg_1223:
%reg302 = phi i32 [1, %true_case_1219], [0, %false_case_1221]
%reg303 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 34
store i32 %reg302, i32* %reg303
br label %statement_1228
statement_1228:
%param_ptr304 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 34
%param_raw305 = load i32, i32* %param_ptr304
%reg306 = trunc i32 %param_raw305 to i1
br i1 %reg306, label %true_case_1233, label %false_case_1235
true_case_1233:
br label %true_case_1237
false_case_1235:
br label %false_case_1239
true_case_1237:
br label %set_bool_reg_1241
false_case_1239:
br label %set_bool_reg_1241
set_bool_reg_1241:
%reg307 = phi i32 [1, %true_case_1237], [0, %false_case_1239]
%reg308 = add i32 0, %reg307
call void(i32) @printBool(i32 %reg308)
br label %statement_1246
statement_1246:
%reg309 = icmp eq i32 4, 4
br i1 %reg309, label %parse_label_1249, label %true_case_1252
parse_label_1249:
%reg310 = icmp sgt i32 4, 5
br i1 %reg310, label %false_case_1254, label %true_case_1252
true_case_1252:
br label %set_bool_reg_1256
false_case_1254:
br label %set_bool_reg_1256
set_bool_reg_1256:
%reg311 = phi i32 [1, %true_case_1252], [0, %false_case_1254]
%reg312 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 35
store i32 %reg311, i32* %reg312
br label %statement_1261
statement_1261:
%param_ptr313 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 35
%param_raw314 = load i32, i32* %param_ptr313
%reg315 = trunc i32 %param_raw314 to i1
br i1 %reg315, label %true_case_1266, label %false_case_1268
true_case_1266:
br label %true_case_1270
false_case_1268:
br label %false_case_1272
true_case_1270:
br label %set_bool_reg_1274
false_case_1272:
br label %set_bool_reg_1274
set_bool_reg_1274:
%reg316 = phi i32 [1, %true_case_1270], [0, %false_case_1272]
%reg317 = add i32 0, %reg316
call void(i32) @printBool(i32 %reg317)
br label %statement_1279
statement_1279:
%reg318 = icmp eq i32 4, 4
br i1 %reg318, label %parse_label_1282, label %true_case_1285
parse_label_1282:
%reg319 = icmp ne i32 4, 4
br i1 %reg319, label %false_case_1287, label %true_case_1285
true_case_1285:
br label %set_bool_reg_1289
false_case_1287:
br label %set_bool_reg_1289
set_bool_reg_1289:
%reg320 = phi i32 [1, %true_case_1285], [0, %false_case_1287]
%reg321 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 36
store i32 %reg320, i32* %reg321
br label %statement_1294
statement_1294:
%param_ptr322 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 36
%param_raw323 = load i32, i32* %param_ptr322
%reg324 = trunc i32 %param_raw323 to i1
br i1 %reg324, label %true_case_1299, label %false_case_1301
true_case_1299:
br label %true_case_1303
false_case_1301:
br label %false_case_1305
true_case_1303:
br label %set_bool_reg_1307
false_case_1305:
br label %set_bool_reg_1307
set_bool_reg_1307:
%reg325 = phi i32 [1, %true_case_1303], [0, %false_case_1305]
%reg326 = add i32 0, %reg325
call void(i32) @printBool(i32 %reg326)
br label %statement_1312
statement_1312:
%reg327 = call i1() @True()
br i1 %reg327, label %true_case_1315, label %false_case_1317
true_case_1315:
br label %parse_label_1319
false_case_1317:
br label %true_case_1326
parse_label_1319:
%reg328 = call i1() @False()
br i1 %reg328, label %true_case_1322, label %false_case_1324
true_case_1322:
br label %false_case_1328
false_case_1324:
br label %true_case_1326
true_case_1326:
br label %set_bool_reg_1330
false_case_1328:
br label %set_bool_reg_1330
set_bool_reg_1330:
%reg329 = phi i32 [1, %true_case_1326], [0, %false_case_1328]
%reg330 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 37
store i32 %reg329, i32* %reg330
br label %statement_1335
statement_1335:
%param_ptr331 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 37
%param_raw332 = load i32, i32* %param_ptr331
%reg333 = trunc i32 %param_raw332 to i1
br i1 %reg333, label %true_case_1340, label %false_case_1342
true_case_1340:
br label %true_case_1344
false_case_1342:
br label %false_case_1346
true_case_1344:
br label %set_bool_reg_1348
false_case_1346:
br label %set_bool_reg_1348
set_bool_reg_1348:
%reg334 = phi i32 [1, %true_case_1344], [0, %false_case_1346]
%reg335 = add i32 0, %reg334
call void(i32) @printBool(i32 %reg335)
br label %statement_1353
statement_1353:
%reg336 = call i1() @True()
br i1 %reg336, label %true_case_1356, label %false_case_1358
true_case_1356:
br label %parse_label_1360
false_case_1358:
br label %true_case_1362
parse_label_1360:
br label %true_case_1362
true_case_1362:
br label %set_bool_reg_1366
false_case_1364:
br label %set_bool_reg_1366
set_bool_reg_1366:
%reg337 = phi i32 [1, %true_case_1362], [0, %false_case_1364]
%reg338 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 38
store i32 %reg337, i32* %reg338
br label %statement_1371
statement_1371:
%param_ptr339 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 38
%param_raw340 = load i32, i32* %param_ptr339
%reg341 = trunc i32 %param_raw340 to i1
br i1 %reg341, label %true_case_1376, label %false_case_1378
true_case_1376:
br label %true_case_1380
false_case_1378:
br label %false_case_1382
true_case_1380:
br label %set_bool_reg_1384
false_case_1382:
br label %set_bool_reg_1384
set_bool_reg_1384:
%reg342 = phi i32 [1, %true_case_1380], [0, %false_case_1382]
%reg343 = add i32 0, %reg342
call void(i32) @printBool(i32 %reg343)
br label %statement_1389
statement_1389:
%reg344 = call i1() @True()
br i1 %reg344, label %true_case_1392, label %false_case_1394
true_case_1392:
br label %parse_label_1396
false_case_1394:
br label %true_case_1405
parse_label_1396:
%param_ptr345 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw346 = load i32, i32* %param_ptr345
%reg347 = trunc i32 %param_raw346 to i1
br i1 %reg347, label %true_case_1401, label %false_case_1403
true_case_1401:
br label %false_case_1407
false_case_1403:
br label %true_case_1405
true_case_1405:
br label %set_bool_reg_1409
false_case_1407:
br label %set_bool_reg_1409
set_bool_reg_1409:
%reg348 = phi i32 [1, %true_case_1405], [0, %false_case_1407]
%reg349 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 39
store i32 %reg348, i32* %reg349
br label %statement_1414
statement_1414:
%param_ptr350 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 39
%param_raw351 = load i32, i32* %param_ptr350
%reg352 = trunc i32 %param_raw351 to i1
br i1 %reg352, label %true_case_1419, label %false_case_1421
true_case_1419:
br label %true_case_1423
false_case_1421:
br label %false_case_1425
true_case_1423:
br label %set_bool_reg_1427
false_case_1425:
br label %set_bool_reg_1427
set_bool_reg_1427:
%reg353 = phi i32 [1, %true_case_1423], [0, %false_case_1425]
%reg354 = add i32 0, %reg353
call void(i32) @printBool(i32 %reg354)
br label %statement_1432
statement_1432:
%reg355 = call i1() @True()
br i1 %reg355, label %true_case_1435, label %false_case_1437
true_case_1435:
br label %parse_label_1439
false_case_1437:
br label %true_case_1442
parse_label_1439:
%reg356 = icmp sgt i32 4, 5
br i1 %reg356, label %false_case_1444, label %true_case_1442
true_case_1442:
br label %set_bool_reg_1446
false_case_1444:
br label %set_bool_reg_1446
set_bool_reg_1446:
%reg357 = phi i32 [1, %true_case_1442], [0, %false_case_1444]
%reg358 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 40
store i32 %reg357, i32* %reg358
br label %statement_1451
statement_1451:
%param_ptr359 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 40
%param_raw360 = load i32, i32* %param_ptr359
%reg361 = trunc i32 %param_raw360 to i1
br i1 %reg361, label %true_case_1456, label %false_case_1458
true_case_1456:
br label %true_case_1460
false_case_1458:
br label %false_case_1462
true_case_1460:
br label %set_bool_reg_1464
false_case_1462:
br label %set_bool_reg_1464
set_bool_reg_1464:
%reg362 = phi i32 [1, %true_case_1460], [0, %false_case_1462]
%reg363 = add i32 0, %reg362
call void(i32) @printBool(i32 %reg363)
br label %statement_1469
statement_1469:
%reg364 = call i1() @True()
br i1 %reg364, label %true_case_1472, label %false_case_1474
true_case_1472:
br label %parse_label_1476
false_case_1474:
br label %true_case_1479
parse_label_1476:
%reg365 = icmp ne i32 4, 4
br i1 %reg365, label %false_case_1481, label %true_case_1479
true_case_1479:
br label %set_bool_reg_1483
false_case_1481:
br label %set_bool_reg_1483
set_bool_reg_1483:
%reg366 = phi i32 [1, %true_case_1479], [0, %false_case_1481]
%reg367 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 41
store i32 %reg366, i32* %reg367
br label %statement_1488
statement_1488:
%param_ptr368 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 41
%param_raw369 = load i32, i32* %param_ptr368
%reg370 = trunc i32 %param_raw369 to i1
br i1 %reg370, label %true_case_1493, label %false_case_1495
true_case_1493:
br label %true_case_1497
false_case_1495:
br label %false_case_1499
true_case_1497:
br label %set_bool_reg_1501
false_case_1499:
br label %set_bool_reg_1501
set_bool_reg_1501:
%reg371 = phi i32 [1, %true_case_1497], [0, %false_case_1499]
%reg372 = add i32 0, %reg371
call void(i32) @printBool(i32 %reg372)
br label %statement_1506
statement_1506:
br label %parse_label_1508
parse_label_1508:
%reg373 = call i1() @False()
br i1 %reg373, label %true_case_1511, label %false_case_1513
true_case_1511:
br label %false_case_1517
false_case_1513:
br label %true_case_1515
true_case_1515:
br label %set_bool_reg_1519
false_case_1517:
br label %set_bool_reg_1519
set_bool_reg_1519:
%reg374 = phi i32 [1, %true_case_1515], [0, %false_case_1517]
%reg375 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 42
store i32 %reg374, i32* %reg375
br label %statement_1524
statement_1524:
%param_ptr376 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 42
%param_raw377 = load i32, i32* %param_ptr376
%reg378 = trunc i32 %param_raw377 to i1
br i1 %reg378, label %true_case_1529, label %false_case_1531
true_case_1529:
br label %true_case_1533
false_case_1531:
br label %false_case_1535
true_case_1533:
br label %set_bool_reg_1537
false_case_1535:
br label %set_bool_reg_1537
set_bool_reg_1537:
%reg379 = phi i32 [1, %true_case_1533], [0, %false_case_1535]
%reg380 = add i32 0, %reg379
call void(i32) @printBool(i32 %reg380)
br label %statement_1542
statement_1542:
br label %parse_label_1544
parse_label_1544:
br label %true_case_1546
true_case_1546:
br label %set_bool_reg_1550
false_case_1548:
br label %set_bool_reg_1550
set_bool_reg_1550:
%reg381 = phi i32 [1, %true_case_1546], [0, %false_case_1548]
%reg382 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 43
store i32 %reg381, i32* %reg382
br label %statement_1555
statement_1555:
%param_ptr383 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 43
%param_raw384 = load i32, i32* %param_ptr383
%reg385 = trunc i32 %param_raw384 to i1
br i1 %reg385, label %true_case_1560, label %false_case_1562
true_case_1560:
br label %true_case_1564
false_case_1562:
br label %false_case_1566
true_case_1564:
br label %set_bool_reg_1568
false_case_1566:
br label %set_bool_reg_1568
set_bool_reg_1568:
%reg386 = phi i32 [1, %true_case_1564], [0, %false_case_1566]
%reg387 = add i32 0, %reg386
call void(i32) @printBool(i32 %reg387)
br label %statement_1573
statement_1573:
br label %parse_label_1575
parse_label_1575:
%param_ptr388 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw389 = load i32, i32* %param_ptr388
%reg390 = trunc i32 %param_raw389 to i1
br i1 %reg390, label %true_case_1580, label %false_case_1582
true_case_1580:
br label %false_case_1586
false_case_1582:
br label %true_case_1584
true_case_1584:
br label %set_bool_reg_1588
false_case_1586:
br label %set_bool_reg_1588
set_bool_reg_1588:
%reg391 = phi i32 [1, %true_case_1584], [0, %false_case_1586]
%reg392 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 44
store i32 %reg391, i32* %reg392
br label %statement_1593
statement_1593:
%param_ptr393 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 44
%param_raw394 = load i32, i32* %param_ptr393
%reg395 = trunc i32 %param_raw394 to i1
br i1 %reg395, label %true_case_1598, label %false_case_1600
true_case_1598:
br label %true_case_1602
false_case_1600:
br label %false_case_1604
true_case_1602:
br label %set_bool_reg_1606
false_case_1604:
br label %set_bool_reg_1606
set_bool_reg_1606:
%reg396 = phi i32 [1, %true_case_1602], [0, %false_case_1604]
%reg397 = add i32 0, %reg396
call void(i32) @printBool(i32 %reg397)
br label %statement_1611
statement_1611:
br label %parse_label_1613
parse_label_1613:
%reg398 = icmp sgt i32 4, 5
br i1 %reg398, label %false_case_1618, label %true_case_1616
true_case_1616:
br label %set_bool_reg_1620
false_case_1618:
br label %set_bool_reg_1620
set_bool_reg_1620:
%reg399 = phi i32 [1, %true_case_1616], [0, %false_case_1618]
%reg400 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 45
store i32 %reg399, i32* %reg400
br label %statement_1625
statement_1625:
%param_ptr401 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 45
%param_raw402 = load i32, i32* %param_ptr401
%reg403 = trunc i32 %param_raw402 to i1
br i1 %reg403, label %true_case_1630, label %false_case_1632
true_case_1630:
br label %true_case_1634
false_case_1632:
br label %false_case_1636
true_case_1634:
br label %set_bool_reg_1638
false_case_1636:
br label %set_bool_reg_1638
set_bool_reg_1638:
%reg404 = phi i32 [1, %true_case_1634], [0, %false_case_1636]
%reg405 = add i32 0, %reg404
call void(i32) @printBool(i32 %reg405)
br label %statement_1643
statement_1643:
br label %parse_label_1645
parse_label_1645:
%reg406 = icmp ne i32 4, 4
br i1 %reg406, label %false_case_1650, label %true_case_1648
true_case_1648:
br label %set_bool_reg_1652
false_case_1650:
br label %set_bool_reg_1652
set_bool_reg_1652:
%reg407 = phi i32 [1, %true_case_1648], [0, %false_case_1650]
%reg408 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 46
store i32 %reg407, i32* %reg408
br label %statement_1657
statement_1657:
%param_ptr409 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 46
%param_raw410 = load i32, i32* %param_ptr409
%reg411 = trunc i32 %param_raw410 to i1
br i1 %reg411, label %true_case_1662, label %false_case_1664
true_case_1662:
br label %true_case_1666
false_case_1664:
br label %false_case_1668
true_case_1666:
br label %set_bool_reg_1670
false_case_1668:
br label %set_bool_reg_1670
set_bool_reg_1670:
%reg412 = phi i32 [1, %true_case_1666], [0, %false_case_1668]
%reg413 = add i32 0, %reg412
call void(i32) @printBool(i32 %reg413)
br label %statement_1675
statement_1675:
%param_ptr414 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw415 = load i32, i32* %param_ptr414
%reg416 = trunc i32 %param_raw415 to i1
br i1 %reg416, label %true_case_1680, label %false_case_1682
true_case_1680:
br label %parse_label_1684
false_case_1682:
br label %true_case_1691
parse_label_1684:
%reg417 = call i1() @False()
br i1 %reg417, label %true_case_1687, label %false_case_1689
true_case_1687:
br label %false_case_1693
false_case_1689:
br label %true_case_1691
true_case_1691:
br label %set_bool_reg_1695
false_case_1693:
br label %set_bool_reg_1695
set_bool_reg_1695:
%reg418 = phi i32 [1, %true_case_1691], [0, %false_case_1693]
%reg419 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 47
store i32 %reg418, i32* %reg419
br label %statement_1700
statement_1700:
%param_ptr420 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 47
%param_raw421 = load i32, i32* %param_ptr420
%reg422 = trunc i32 %param_raw421 to i1
br i1 %reg422, label %true_case_1705, label %false_case_1707
true_case_1705:
br label %true_case_1709
false_case_1707:
br label %false_case_1711
true_case_1709:
br label %set_bool_reg_1713
false_case_1711:
br label %set_bool_reg_1713
set_bool_reg_1713:
%reg423 = phi i32 [1, %true_case_1709], [0, %false_case_1711]
%reg424 = add i32 0, %reg423
call void(i32) @printBool(i32 %reg424)
br label %statement_1718
statement_1718:
%param_ptr425 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw426 = load i32, i32* %param_ptr425
%reg427 = trunc i32 %param_raw426 to i1
br i1 %reg427, label %true_case_1723, label %false_case_1725
true_case_1723:
br label %parse_label_1727
false_case_1725:
br label %true_case_1729
parse_label_1727:
br label %true_case_1729
true_case_1729:
br label %set_bool_reg_1733
false_case_1731:
br label %set_bool_reg_1733
set_bool_reg_1733:
%reg428 = phi i32 [1, %true_case_1729], [0, %false_case_1731]
%reg429 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 48
store i32 %reg428, i32* %reg429
br label %statement_1738
statement_1738:
%param_ptr430 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 48
%param_raw431 = load i32, i32* %param_ptr430
%reg432 = trunc i32 %param_raw431 to i1
br i1 %reg432, label %true_case_1743, label %false_case_1745
true_case_1743:
br label %true_case_1747
false_case_1745:
br label %false_case_1749
true_case_1747:
br label %set_bool_reg_1751
false_case_1749:
br label %set_bool_reg_1751
set_bool_reg_1751:
%reg433 = phi i32 [1, %true_case_1747], [0, %false_case_1749]
%reg434 = add i32 0, %reg433
call void(i32) @printBool(i32 %reg434)
br label %statement_1756
statement_1756:
%param_ptr435 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw436 = load i32, i32* %param_ptr435
%reg437 = trunc i32 %param_raw436 to i1
br i1 %reg437, label %true_case_1761, label %false_case_1763
true_case_1761:
br label %parse_label_1765
false_case_1763:
br label %true_case_1774
parse_label_1765:
%param_ptr438 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw439 = load i32, i32* %param_ptr438
%reg440 = trunc i32 %param_raw439 to i1
br i1 %reg440, label %true_case_1770, label %false_case_1772
true_case_1770:
br label %false_case_1776
false_case_1772:
br label %true_case_1774
true_case_1774:
br label %set_bool_reg_1778
false_case_1776:
br label %set_bool_reg_1778
set_bool_reg_1778:
%reg441 = phi i32 [1, %true_case_1774], [0, %false_case_1776]
%reg442 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 49
store i32 %reg441, i32* %reg442
br label %statement_1783
statement_1783:
%param_ptr443 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 49
%param_raw444 = load i32, i32* %param_ptr443
%reg445 = trunc i32 %param_raw444 to i1
br i1 %reg445, label %true_case_1788, label %false_case_1790
true_case_1788:
br label %true_case_1792
false_case_1790:
br label %false_case_1794
true_case_1792:
br label %set_bool_reg_1796
false_case_1794:
br label %set_bool_reg_1796
set_bool_reg_1796:
%reg446 = phi i32 [1, %true_case_1792], [0, %false_case_1794]
%reg447 = add i32 0, %reg446
call void(i32) @printBool(i32 %reg447)
br label %func_end_1802
br label %func_end_1802
func_end_1802:
ret void
}
