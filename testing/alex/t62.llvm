declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
define void@test(i32){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
%reg1 = add i32 0, %0
%reg2 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg1, i32* %reg2
br label %statement_8
statement_8:
%reg3 = add i32 0, %0
call void(i32) @printi(i32 %reg3)
br label %statement_12
statement_12:
%param_ptr4 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw5 = load i32, i32* %param_ptr4
%reg6 = add i32 0, %param_raw5
call void(i32) @printi(i32 %reg6)
br label %func_end_19
br label %func_end_19
func_end_19:
ret void
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_25
statement_25:
%reg7 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32  22, i32* %reg7
br label %statement_29
statement_29:
%param_ptr8 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw9 = load i32, i32* %param_ptr8
%reg10 = add i32 0, %param_raw9
%reg11 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 %reg10, i32* %reg11
br label %statement_36
statement_36:
%param_ptr12 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw13 = load i32, i32* %param_ptr12
%reg14 = add i32 0, %param_raw13
%reg15 = add i32 %reg14,  2
%reg16 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
store i32 %reg15, i32* %reg16
br label %parse_label_44
parse_label_44:
%param_ptr17 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw18 = load i32, i32* %param_ptr17
%reg19 = add i32 0, %param_raw18
%reg20 = icmp eq i32 %reg19,  33
br i1 %reg20, label %statement_50, label %statement_56
statement_50:
%param_ptr21 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw22 = load i32, i32* %param_ptr21
%reg23 = add i32 0, %param_raw22
call void(i32) @printi(i32 %reg23)
br label %statement_56
statement_56:
%reg24 = add i32  22,  1
%reg25 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 3
store i32 %reg24, i32* %reg25
br label %statement_61
statement_61:
%param_ptr26 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 3
%param_raw27 = load i32, i32* %param_ptr26
%reg28 = add i32 0, %param_raw27
call void(i32) @printi(i32 %reg28)
br label %func_end_68
br label %func_end_68
func_end_68:
ret void
}
