declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
define i32@f(i32, i32, i32){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
%reg1 = add i32 0, %0
%reg2 = add i32 0, %1
%reg3 = add i32 %reg1, %reg2
%reg4 = add i32 0, %2
%reg5 = add i32 %reg3, %reg4
ret i32%reg5
br label %func_end_11
func_end_11:
ret i32 0
}
define i32@g(i32, i32){
%sp = alloca [50 x i32]
br label %statement_17
statement_17:
%reg6 = add i32 0, %0
%reg7 = add i32 0, %1
%reg8 = add i32 %reg6, %reg7
%reg9 = add i32 %reg8,  1
ret i32%reg9
br label %func_end_24
func_end_24:
ret i32 0
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_30
statement_30:
%reg10 = call i32(i32, i32) @g(i32  2, i32  2)
%reg11 = add i32 0, %reg10
%reg12 = call i32(i32, i32) @g(i32  3, i32  4)
%reg13 = add i32 0, %reg12
%reg14 = call i32(i32, i32) @g(i32  1, i32  1)
%reg15 = add i32 0, %reg14
%reg16 = call i32(i32, i32, i32) @f(i32 %reg11, i32 %reg13, i32 %reg15)
%reg17 = add i32 0, %reg16
call void(i32) @printi(i32 %reg17)
br label %statement_41
statement_41:
%reg18 = call i32(i32, i32) @g(i32  4, i32  2)
%reg19 = add i32 0, %reg18
%reg20 = call i32(i32, i32) @g(i32  4, i32  4)
%reg21 = add i32 0, %reg20
%reg22 = call i32(i32, i32) @g(i32  5, i32  1)
%reg23 = add i32 0, %reg22
%reg24 = call i32(i32, i32, i32) @f(i32 %reg19, i32 %reg21, i32 %reg23)
%reg25 = add i32 0, %reg24
call void(i32) @printi(i32 %reg25)
br label %func_end_53
br label %func_end_53
func_end_53:
ret void
}
