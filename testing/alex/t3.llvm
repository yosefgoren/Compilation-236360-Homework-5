declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
@.string_id0 = constant [14 x i8] c"test number 1\00"
@.string_id1 = constant [14 x i8] c"test number 2\00"
@.string_id2 = constant [14 x i8] c"test number 3\00"
@.string_id3 = constant [14 x i8] c"test number 4\00"
@.string_id4 = constant [14 x i8] c"test number 5\00"
@.string_id5 = constant [14 x i8] c"test number 6\00"
@.string_id6 = constant [14 x i8] c"test number 7\00"
@.string_id7 = constant [14 x i8] c"test number 8\00"
@.string_id8 = constant [14 x i8] c"test number 9\00"
@.string_id9 = constant [15 x i8] c"test number 10\00"
@.string_id10 = constant [15 x i8] c"test number 11\00"
@.string_id11 = constant [15 x i8] c"test number 12\00"
@.string_id12 = constant [15 x i8] c"test number 13\00"
@.string_id13 = constant [15 x i8] c"test number 14\00"
@.string_id14 = constant [15 x i8] c"test number 15\00"
@.string_id15 = constant [15 x i8] c"test number 16\00"
@.string_id16 = constant [15 x i8] c"test number 17\00"
@.string_id17 = constant [15 x i8] c"test number 18\00"
@.string_id18 = constant [15 x i8] c"test number 19\00"
@.string_id19 = constant [15 x i8] c"test number 20\00"
@.string_id20 = constant [15 x i8] c"test number 21\00"
@.string_id21 = constant [15 x i8] c"test number 22\00"
@.string_id22 = constant [15 x i8] c"test number 23\00"
@.string_id23 = constant [15 x i8] c"test number 24\00"
@.string_id24 = constant [15 x i8] c"test number 25\00"
@.string_id25 = constant [15 x i8] c"test number 26\00"
@.string_id26 = constant [15 x i8] c"test number 27\00"
@.string_id27 = constant [15 x i8] c"test number 28\00"
@.string_id28 = constant [15 x i8] c"test number 29\00"
@.string_id29 = constant [15 x i8] c"test number 30\00"
@.string_id30 = constant [15 x i8] c"test number 31\00"
@.string_id31 = constant [15 x i8] c"test number 32\00"
@.string_id32 = constant [15 x i8] c"test number 33\00"
@.string_id33 = constant [15 x i8] c"test number 34\00"
@.string_id34 = constant [15 x i8] c"test number 35\00"
@.string_id35 = constant [15 x i8] c"test number 36\00"
@.string_id36 = constant [15 x i8] c"test number 37\00"
define void@main(){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
%str_ptr_reg1 = getelementptr [14 x i8], [14 x i8]* @.string_id0, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg1)
br label %statement_7
statement_7:
%reg2 = add i32  2,  3
call void(i32) @printi(i32 %reg2)
br label %statement_11
statement_11:
%str_ptr_reg3 = getelementptr [14 x i8], [14 x i8]* @.string_id1, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg3)
br label %statement_15
statement_15:
%reg4 = sub i32  10,  8
call void(i32) @printi(i32 %reg4)
br label %statement_19
statement_19:
%str_ptr_reg5 = getelementptr [14 x i8], [14 x i8]* @.string_id2, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg5)
br label %statement_23
statement_23:
%reg6 = mul i32  2,  3
call void(i32) @printi(i32 %reg6)
br label %statement_27
statement_27:
%str_ptr_reg7 = getelementptr [14 x i8], [14 x i8]* @.string_id3, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg7)
br label %statement_31
statement_31:
call void(i32) @errorIfZero9001(i32  2)
%reg8 = sdiv i32  4,  2
call void(i32) @printi(i32 %reg8)
br label %statement_36
statement_36:
%str_ptr_reg9 = getelementptr [14 x i8], [14 x i8]* @.string_id4, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg9)
br label %statement_40
statement_40:
%reg10 = mul i32  3,  5
call void(i32) @errorIfZero9001(i32  5)
%reg11 = sdiv i32 %reg10,  5
%reg12 = add i32  2, %reg11
call void(i32) @printi(i32 %reg12)
br label %statement_47
statement_47:
%str_ptr_reg13 = getelementptr [14 x i8], [14 x i8]* @.string_id5, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg13)
br label %statement_51
statement_51:
%reg14 = mul i32  2,  3
%reg15 = mul i32  5,  5
%reg16 = add i32 %reg14, %reg15
call void(i32) @printi(i32 %reg16)
br label %statement_57
statement_57:
%str_ptr_reg17 = getelementptr [14 x i8], [14 x i8]* @.string_id6, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg17)
br label %statement_61
statement_61:
call void(i32) @errorIfZero9001(i32  3)
%reg18 = sdiv i32  6,  3
call void(i32) @errorIfZero9001(i32  5)
%reg19 = sdiv i32  200,  5
%reg20 = add i32 %reg18, %reg19
call void(i32) @printi(i32 %reg20)
br label %statement_69
statement_69:
%str_ptr_reg21 = getelementptr [14 x i8], [14 x i8]* @.string_id7, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg21)
br label %statement_73
statement_73:
%reg22 = mul i32  5,  5
%reg23 = mul i32  2,  3
%reg24 = sub i32 %reg22, %reg23
call void(i32) @printi(i32 %reg24)
br label %statement_79
statement_79:
%str_ptr_reg25 = getelementptr [14 x i8], [14 x i8]* @.string_id8, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg25)
br label %statement_83
statement_83:
call void(i32) @errorIfZero9001(i32  3)
%reg26 = sdiv i32  300,  3
call void(i32) @errorIfZero9001(i32  5)
%reg27 = sdiv i32  200,  5
%reg28 = sub i32 %reg26, %reg27
call void(i32) @printi(i32 %reg28)
br label %statement_91
statement_91:
%str_ptr_reg29 = getelementptr [15 x i8], [15 x i8]* @.string_id9, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg29)
br label %statement_95
statement_95:
%reg30 = mul i32  5,  5
%reg31 = mul i32  2,  3
%reg32 = sub i32 %reg30, %reg31
call void(i32) @printi(i32 %reg32)
br label %statement_101
statement_101:
%str_ptr_reg33 = getelementptr [15 x i8], [15 x i8]* @.string_id10, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg33)
br label %statement_105
statement_105:
call void(i32) @errorIfZero9001(i32  3)
%reg34 = sdiv i32  300,  3
call void(i32) @errorIfZero9001(i32  5)
%reg35 = sdiv i32  200,  5
%reg36 = sub i32 %reg34, %reg35
call void(i32) @printi(i32 %reg36)
br label %statement_113
statement_113:
%str_ptr_reg37 = getelementptr [15 x i8], [15 x i8]* @.string_id11, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg37)
br label %statement_117
statement_117:
%reg38 = add i8  2,  3
%raw_reg39 = zext i8 %reg38 to i32
call void(i32) @printi(i32 %raw_reg39)
br label %statement_122
statement_122:
%str_ptr_reg40 = getelementptr [15 x i8], [15 x i8]* @.string_id12, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg40)
br label %statement_126
statement_126:
%reg41 = sub i8  10,  8
%raw_reg42 = zext i8 %reg41 to i32
call void(i32) @printi(i32 %raw_reg42)
br label %statement_131
statement_131:
%str_ptr_reg43 = getelementptr [15 x i8], [15 x i8]* @.string_id13, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg43)
br label %statement_135
statement_135:
%reg44 = mul i8  2,  3
%raw_reg45 = zext i8 %reg44 to i32
call void(i32) @printi(i32 %raw_reg45)
br label %statement_140
statement_140:
%str_ptr_reg46 = getelementptr [15 x i8], [15 x i8]* @.string_id14, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg46)
br label %statement_144
statement_144:
%raw_reg47 = zext i8  2 to i32
call void(i32) @errorIfZero9001(i32 %raw_reg47)
%reg48 = udiv i8  4,  2
%raw_reg49 = zext i8 %reg48 to i32
call void(i32) @printi(i32 %raw_reg49)
br label %statement_151
statement_151:
%str_ptr_reg50 = getelementptr [15 x i8], [15 x i8]* @.string_id15, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg50)
br label %statement_155
statement_155:
%reg51 = mul i8  3,  5
%raw_reg52 = zext i8  5 to i32
call void(i32) @errorIfZero9001(i32 %raw_reg52)
%reg53 = udiv i8 %reg51,  5
%reg54 = add i8  2, %reg53
%raw_reg55 = zext i8 %reg54 to i32
call void(i32) @printi(i32 %raw_reg55)
br label %statement_164
statement_164:
%str_ptr_reg56 = getelementptr [15 x i8], [15 x i8]* @.string_id16, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg56)
br label %statement_168
statement_168:
%reg57 = mul i8  2,  3
%reg58 = mul i8  5,  5
%reg59 = add i8 %reg57, %reg58
%raw_reg60 = zext i8 %reg59 to i32
call void(i32) @printi(i32 %raw_reg60)
br label %statement_175
statement_175:
%str_ptr_reg61 = getelementptr [15 x i8], [15 x i8]* @.string_id17, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg61)
br label %statement_179
statement_179:
%raw_reg62 = zext i8  3 to i32
call void(i32) @errorIfZero9001(i32 %raw_reg62)
%reg63 = udiv i8  6,  3
%raw_reg64 = zext i8  5 to i32
call void(i32) @errorIfZero9001(i32 %raw_reg64)
%reg65 = udiv i8  200,  5
%reg66 = add i8 %reg63, %reg65
%raw_reg67 = zext i8 %reg66 to i32
call void(i32) @printi(i32 %raw_reg67)
br label %statement_190
statement_190:
%str_ptr_reg68 = getelementptr [15 x i8], [15 x i8]* @.string_id18, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg68)
br label %statement_194
statement_194:
%reg69 = mul i8  5,  5
%reg70 = mul i8  2,  3
%reg71 = sub i8 %reg69, %reg70
%raw_reg72 = zext i8 %reg71 to i32
call void(i32) @printi(i32 %raw_reg72)
br label %statement_201
statement_201:
%str_ptr_reg73 = getelementptr [15 x i8], [15 x i8]* @.string_id19, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg73)
br label %statement_205
statement_205:
%raw_reg74 = zext i8  2 to i32
call void(i32) @errorIfZero9001(i32 %raw_reg74)
%reg75 = udiv i8  100,  2
%raw_reg76 = zext i8  10 to i32
call void(i32) @errorIfZero9001(i32 %raw_reg76)
%reg77 = udiv i8  200,  10
%reg78 = sub i8 %reg75, %reg77
%raw_reg79 = zext i8 %reg78 to i32
call void(i32) @printi(i32 %raw_reg79)
br label %statement_216
statement_216:
%str_ptr_reg80 = getelementptr [15 x i8], [15 x i8]* @.string_id20, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg80)
br label %statement_220
statement_220:
%reg81 = mul i8  5,  5
%reg82 = mul i8  2,  3
%reg83 = sub i8 %reg81, %reg82
%raw_reg84 = zext i8 %reg83 to i32
call void(i32) @printi(i32 %raw_reg84)
br label %statement_227
statement_227:
%str_ptr_reg85 = getelementptr [15 x i8], [15 x i8]* @.string_id21, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg85)
br label %statement_231
statement_231:
%raw_reg86 = zext i8  2 to i32
call void(i32) @errorIfZero9001(i32 %raw_reg86)
%reg87 = udiv i8  100,  2
%raw_reg88 = zext i8  20 to i32
call void(i32) @errorIfZero9001(i32 %raw_reg88)
%reg89 = udiv i8  200,  20
%reg90 = sub i8 %reg87, %reg89
%raw_reg91 = zext i8 %reg90 to i32
call void(i32) @printi(i32 %raw_reg91)
br label %statement_242
statement_242:
%str_ptr_reg92 = getelementptr [15 x i8], [15 x i8]* @.string_id22, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg92)
br label %statement_246
statement_246:
%b2int_conv_reg93 = zext i8  2 to i32
%reg94 = add i32 %b2int_conv_reg93,  3
call void(i32) @printi(i32 %reg94)
br label %statement_251
statement_251:
%str_ptr_reg95 = getelementptr [15 x i8], [15 x i8]* @.string_id23, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg95)
br label %statement_255
statement_255:
%b2int_conv_reg96 = zext i8  10 to i32
%reg97 = sub i32 %b2int_conv_reg96,  8
call void(i32) @printi(i32 %reg97)
br label %statement_260
statement_260:
%str_ptr_reg98 = getelementptr [15 x i8], [15 x i8]* @.string_id24, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg98)
br label %statement_264
statement_264:
%b2int_conv_reg99 = zext i8  2 to i32
%reg100 = mul i32 %b2int_conv_reg99,  3
call void(i32) @printi(i32 %reg100)
br label %statement_269
statement_269:
%str_ptr_reg101 = getelementptr [15 x i8], [15 x i8]* @.string_id25, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg101)
br label %statement_273
statement_273:
call void(i32) @errorIfZero9001(i32  2)
%b2int_conv_reg102 = zext i8  4 to i32
%reg103 = sdiv i32 %b2int_conv_reg102,  2
call void(i32) @printi(i32 %reg103)
br label %statement_279
statement_279:
%str_ptr_reg104 = getelementptr [15 x i8], [15 x i8]* @.string_id26, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg104)
br label %statement_283
statement_283:
%b2int_conv_reg105 = zext i8  3 to i32
%reg106 = add i32  2, %b2int_conv_reg105
call void(i32) @printi(i32 %reg106)
br label %statement_288
statement_288:
%str_ptr_reg107 = getelementptr [15 x i8], [15 x i8]* @.string_id27, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg107)
br label %statement_292
statement_292:
%b2int_conv_reg108 = zext i8  8 to i32
%reg109 = sub i32  10, %b2int_conv_reg108
call void(i32) @printi(i32 %reg109)
br label %statement_297
statement_297:
%str_ptr_reg110 = getelementptr [15 x i8], [15 x i8]* @.string_id28, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg110)
br label %statement_301
statement_301:
%b2int_conv_reg111 = zext i8  3 to i32
%reg112 = mul i32  2, %b2int_conv_reg111
call void(i32) @printi(i32 %reg112)
br label %statement_306
statement_306:
%str_ptr_reg113 = getelementptr [15 x i8], [15 x i8]* @.string_id29, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg113)
br label %statement_310
statement_310:
%raw_reg114 = zext i8  2 to i32
call void(i32) @errorIfZero9001(i32 %raw_reg114)
%b2int_conv_reg115 = zext i8  2 to i32
%reg116 = sdiv i32  4, %b2int_conv_reg115
call void(i32) @printi(i32 %reg116)
br label %statement_317
statement_317:
%str_ptr_reg117 = getelementptr [15 x i8], [15 x i8]* @.string_id30, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg117)
br label %statement_321
statement_321:
%b2int_conv_reg118 = zext i8  5 to i32
%reg119 = mul i32  3, %b2int_conv_reg118
call void(i32) @errorIfZero9001(i32  5)
%reg120 = sdiv i32 %reg119,  5
%b2int_conv_reg121 = zext i8  2 to i32
%reg122 = add i32 %b2int_conv_reg121, %reg120
call void(i32) @printi(i32 %reg122)
br label %statement_330
statement_330:
%str_ptr_reg123 = getelementptr [15 x i8], [15 x i8]* @.string_id31, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg123)
br label %statement_334
statement_334:
%b2int_conv_reg124 = zext i8  2 to i32
%reg125 = mul i32 %b2int_conv_reg124,  3
%b2int_conv_reg126 = zext i8  5 to i32
%reg127 = mul i32 %b2int_conv_reg126,  5
%reg128 = add i32 %reg125, %reg127
call void(i32) @printi(i32 %reg128)
br label %statement_342
statement_342:
%str_ptr_reg129 = getelementptr [15 x i8], [15 x i8]* @.string_id32, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg129)
br label %statement_346
statement_346:
call void(i32) @errorIfZero9001(i32  3)
%b2int_conv_reg130 = zext i8  6 to i32
%reg131 = sdiv i32 %b2int_conv_reg130,  3
call void(i32) @errorIfZero9001(i32  5)
%b2int_conv_reg132 = zext i8  200 to i32
%reg133 = sdiv i32 %b2int_conv_reg132,  5
%reg134 = add i32 %reg131, %reg133
call void(i32) @printi(i32 %reg134)
br label %statement_356
statement_356:
%str_ptr_reg135 = getelementptr [15 x i8], [15 x i8]* @.string_id33, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg135)
br label %statement_360
statement_360:
%b2int_conv_reg136 = zext i8  5 to i32
%reg137 = mul i32 %b2int_conv_reg136,  5
%b2int_conv_reg138 = zext i8  2 to i32
%reg139 = mul i32 %b2int_conv_reg138,  3
%reg140 = sub i32 %reg137, %reg139
call void(i32) @printi(i32 %reg140)
br label %statement_368
statement_368:
%str_ptr_reg141 = getelementptr [15 x i8], [15 x i8]* @.string_id34, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg141)
br label %statement_372
statement_372:
call void(i32) @errorIfZero9001(i32  2)
%b2int_conv_reg142 = zext i8  100 to i32
%reg143 = sdiv i32 %b2int_conv_reg142,  2
call void(i32) @errorIfZero9001(i32  10)
%b2int_conv_reg144 = zext i8  200 to i32
%reg145 = sdiv i32 %b2int_conv_reg144,  10
%reg146 = sub i32 %reg143, %reg145
call void(i32) @printi(i32 %reg146)
br label %statement_382
statement_382:
%str_ptr_reg147 = getelementptr [15 x i8], [15 x i8]* @.string_id35, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg147)
br label %statement_386
statement_386:
%b2int_conv_reg148 = zext i8  5 to i32
%reg149 = mul i32 %b2int_conv_reg148,  5
%b2int_conv_reg150 = zext i8  2 to i32
%reg151 = mul i32 %b2int_conv_reg150,  3
%reg152 = sub i32 %reg149, %reg151
call void(i32) @printi(i32 %reg152)
br label %statement_394
statement_394:
%str_ptr_reg153 = getelementptr [15 x i8], [15 x i8]* @.string_id36, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg153)
br label %statement_398
statement_398:
call void(i32) @errorIfZero9001(i32  2)
%b2int_conv_reg154 = zext i8  100 to i32
%reg155 = sdiv i32 %b2int_conv_reg154,  2
call void(i32) @errorIfZero9001(i32  20)
%b2int_conv_reg156 = zext i8  200 to i32
%reg157 = sdiv i32 %b2int_conv_reg156,  20
%reg158 = sub i32 %reg155, %reg157
call void(i32) @printi(i32 %reg158)
br label %func_end_409
br label %func_end_409
func_end_409:
ret void
}
