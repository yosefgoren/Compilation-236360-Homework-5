declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
@.string_id0 = constant [10 x i8] c"test int:\00"
@.string_id1 = constant [11 x i8] c"test byte:\00"
define void@printNum(i32){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
%reg1 = add i32 0, %0
call void(i32) @printi(i32 %reg1)
br label %func_end_8
br label %func_end_8
func_end_8:
ret void
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_14
statement_14:
%str_ptr_reg2 = getelementptr [10 x i8], [10 x i8]* @.string_id0, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg2)
br label %statement_18
statement_18:
%reg3 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 5, i32* %reg3
br label %cond_22
cond_22:
br label %parse_label_24
parse_label_24:
%param_ptr4 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw5 = load i32, i32* %param_ptr4
%reg6 = add i32 0, %param_raw5
%reg7 = icmp eq i32 %reg6, 1
br i1 %reg7, label %statement_30, label %parse_label_43
statement_30:
call void(i32) @printNum(i32 1)
br label %statement_33
statement_33:
%param_ptr8 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw9 = load i32, i32* %param_ptr8
%reg10 = add i32 0, %param_raw9
%reg11 = sub i32 %reg10, 1
%reg12 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg11, i32* %reg12
br label %statement_41
statement_41:
br label %statement_111
parse_label_43:
%param_ptr13 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw14 = load i32, i32* %param_ptr13
%reg15 = add i32 0, %param_raw14
%reg16 = icmp eq i32 %reg15, 2
br i1 %reg16, label %statement_49, label %parse_label_60
statement_49:
call void(i32) @printNum(i32 2)
br label %statement_52
statement_52:
%param_ptr17 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw18 = load i32, i32* %param_ptr17
%reg19 = add i32 0, %param_raw18
%reg20 = sub i32 %reg19, 1
%reg21 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg20, i32* %reg21
br label %parse_label_60
parse_label_60:
%param_ptr22 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw23 = load i32, i32* %param_ptr22
%reg24 = add i32 0, %param_raw23
%reg25 = icmp eq i32 %reg24, 3
br i1 %reg25, label %statement_66, label %parse_label_77
statement_66:
call void(i32) @printNum(i32 3)
br label %statement_69
statement_69:
%param_ptr26 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw27 = load i32, i32* %param_ptr26
%reg28 = add i32 0, %param_raw27
%reg29 = sub i32 %reg28, 1
%reg30 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg29, i32* %reg30
br label %parse_label_77
parse_label_77:
%param_ptr31 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw32 = load i32, i32* %param_ptr31
%reg33 = add i32 0, %param_raw32
%reg34 = icmp eq i32 %reg33, 4
br i1 %reg34, label %statement_83, label %parse_label_94
statement_83:
call void(i32) @printNum(i32 4)
br label %statement_86
statement_86:
%param_ptr35 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw36 = load i32, i32* %param_ptr35
%reg37 = add i32 0, %param_raw36
%reg38 = sub i32 %reg37, 1
%reg39 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg38, i32* %reg39
br label %parse_label_94
parse_label_94:
%param_ptr40 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw41 = load i32, i32* %param_ptr40
%reg42 = add i32 0, %param_raw41
%reg43 = icmp eq i32 %reg42, 5
br i1 %reg43, label %statement_100, label %cond_22
statement_100:
call void(i32) @printNum(i32 5)
br label %statement_103
statement_103:
%param_ptr44 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw45 = load i32, i32* %param_ptr44
%reg46 = add i32 0, %param_raw45
%reg47 = sub i32 %reg46, 1
%reg48 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg47, i32* %reg48
br label %cond_22
statement_111:
%str_ptr_reg49 = getelementptr [11 x i8], [11 x i8]* @.string_id1, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg49)
br label %statement_115
statement_115:
%reg50 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 5, i32* %reg50
br label %cond_119
cond_119:
br label %parse_label_121
parse_label_121:
%param_ptr51 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw52 = load i32, i32* %param_ptr51
%truncated_byte53 = trunc i32 %param_raw52 to i8
%reg54 = add i8 0, %truncated_byte53
%reg55 = icmp eq i8 %reg54, 1
br i1 %reg55, label %statement_128, label %parse_label_143
statement_128:
call void(i32) @printNum(i32 1)
br label %statement_131
statement_131:
%param_ptr56 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw57 = load i32, i32* %param_ptr56
%truncated_byte58 = trunc i32 %param_raw57 to i8
%reg59 = add i8 0, %truncated_byte58
%reg60 = sub i8 %reg59, 1
%raw_reg61 = zext i8 %reg60 to i32
%reg62 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 %raw_reg61, i32* %reg62
br label %statement_141
statement_141:
br label %func_end_224
parse_label_143:
%param_ptr63 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw64 = load i32, i32* %param_ptr63
%truncated_byte65 = trunc i32 %param_raw64 to i8
%reg66 = add i8 0, %truncated_byte65
%reg67 = icmp eq i8 %reg66, 2
br i1 %reg67, label %statement_150, label %parse_label_163
statement_150:
call void(i32) @printNum(i32 2)
br label %statement_153
statement_153:
%param_ptr68 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw69 = load i32, i32* %param_ptr68
%truncated_byte70 = trunc i32 %param_raw69 to i8
%reg71 = add i8 0, %truncated_byte70
%reg72 = sub i8 %reg71, 1
%raw_reg73 = zext i8 %reg72 to i32
%reg74 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 %raw_reg73, i32* %reg74
br label %parse_label_163
parse_label_163:
%param_ptr75 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw76 = load i32, i32* %param_ptr75
%truncated_byte77 = trunc i32 %param_raw76 to i8
%reg78 = add i8 0, %truncated_byte77
%reg79 = icmp eq i8 %reg78, 3
br i1 %reg79, label %statement_170, label %parse_label_183
statement_170:
call void(i32) @printNum(i32 3)
br label %statement_173
statement_173:
%param_ptr80 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw81 = load i32, i32* %param_ptr80
%truncated_byte82 = trunc i32 %param_raw81 to i8
%reg83 = add i8 0, %truncated_byte82
%reg84 = sub i8 %reg83, 1
%raw_reg85 = zext i8 %reg84 to i32
%reg86 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 %raw_reg85, i32* %reg86
br label %parse_label_183
parse_label_183:
%param_ptr87 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw88 = load i32, i32* %param_ptr87
%truncated_byte89 = trunc i32 %param_raw88 to i8
%reg90 = add i8 0, %truncated_byte89
%reg91 = icmp eq i8 %reg90, 4
br i1 %reg91, label %statement_190, label %parse_label_203
statement_190:
call void(i32) @printNum(i32 4)
br label %statement_193
statement_193:
%param_ptr92 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw93 = load i32, i32* %param_ptr92
%truncated_byte94 = trunc i32 %param_raw93 to i8
%reg95 = add i8 0, %truncated_byte94
%reg96 = sub i8 %reg95, 1
%raw_reg97 = zext i8 %reg96 to i32
%reg98 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 %raw_reg97, i32* %reg98
br label %parse_label_203
parse_label_203:
%param_ptr99 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw100 = load i32, i32* %param_ptr99
%truncated_byte101 = trunc i32 %param_raw100 to i8
%reg102 = add i8 0, %truncated_byte101
%reg103 = icmp eq i8 %reg102, 5
br i1 %reg103, label %statement_210, label %cond_119
statement_210:
call void(i32) @printNum(i32 5)
br label %statement_213
statement_213:
%param_ptr104 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw105 = load i32, i32* %param_ptr104
%truncated_byte106 = trunc i32 %param_raw105 to i8
%reg107 = add i8 0, %truncated_byte106
%reg108 = sub i8 %reg107, 1
%raw_reg109 = zext i8 %reg108 to i32
%reg110 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 %raw_reg109, i32* %reg110
br label %cond_119
br label %func_end_224
func_end_224:
ret void
}
