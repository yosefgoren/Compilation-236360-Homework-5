declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
@.string_id0 = constant [11 x i8] c"b1 is true\00"
@.string_id1 = constant [12 x i8] c"b2 is false\00"
@.string_id2 = constant [12 x i8] c"b3 is false\00"
@.string_id3 = constant [21 x i8] c"b3 is false after b4\00"
@.string_id4 = constant [9 x i8] c"First If\00"
@.string_id5 = constant [11 x i8] c"First Else\00"
@.string_id6 = constant [10 x i8] c"Second If\00"
@.string_id7 = constant [12 x i8] c"Second Else\00"
@.string_id8 = constant [9 x i8] c"Third If\00"
@.string_id9 = constant [11 x i8] c"Third Else\00"
define i1@f(i32, i32){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
%reg1 = add i32 0, %0
%reg2 = add i32 0, %1
%reg3 = icmp sgt i32 %reg1, %reg2
br i1 %reg3, label %parse_label_8, label %false_case_15
parse_label_8:
%reg4 = add i32 0, %1
%b2int_conv_reg5 = zext i8  100 to i32
%reg6 = icmp slt i32 %reg4, %b2int_conv_reg5
br i1 %reg6, label %true_case_13, label %false_case_15
true_case_13:
br label %set_bool_reg_17
false_case_15:
br label %set_bool_reg_17
set_bool_reg_17:
%reg7 = phi i1 [1, %true_case_13], [0, %false_case_15]
ret i1 %reg7
br label %func_end_21
func_end_21:
ret i1 0
}
define i1@g(i32, i32){
%sp = alloca [50 x i32]
br label %statement_27
statement_27:
%reg8 = add i32 0, %0
%reg9 = icmp sgt i32 %reg8,  10
br i1 %reg9, label %parse_label_31, label %parse_label_38
parse_label_31:
%reg10 = trunc i32 %1 to i1
br i1 %reg10, label %true_case_34, label %false_case_36
true_case_34:
br label %true_case_49
false_case_36:
br label %parse_label_38
parse_label_38:
%reg11 = add i32 0, %0
%reg12 = icmp sle i32 %reg11,  10
br i1 %reg12, label %parse_label_42, label %false_case_51
parse_label_42:
%reg13 = trunc i32 %1 to i1
br i1 %reg13, label %true_case_45, label %false_case_47
true_case_45:
br label %false_case_51
false_case_47:
br label %true_case_49
true_case_49:
br label %set_bool_reg_53
false_case_51:
br label %set_bool_reg_53
set_bool_reg_53:
%reg14 = phi i1 [1, %true_case_49], [0, %false_case_51]
ret i1 %reg14
br label %func_end_57
func_end_57:
ret i1 0
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_63
statement_63:
%reg15 = call i1(i32, i32) @f(i32  10, i32  5)
br i1 %reg15, label %true_case_66, label %false_case_68
true_case_66:
br label %true_case_70
false_case_68:
br label %false_case_72
true_case_70:
br label %set_bool_reg_74
false_case_72:
br label %set_bool_reg_74
set_bool_reg_74:
%reg16 = phi i32 [1, %true_case_70], [0, %false_case_72]
%reg17 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg16, i32* %reg17
br label %parse_label_79
parse_label_79:
%param_ptr18 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw19 = load i32, i32* %param_ptr18
%reg20 = trunc i32 %param_raw19 to i1
br i1 %reg20, label %true_case_84, label %false_case_86
true_case_84:
br label %statement_88
false_case_86:
br label %statement_92
statement_88:
%str_ptr_reg21 = getelementptr [11 x i8], [11 x i8]* @.string_id0, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg21)
br label %statement_92
statement_92:
%param_ptr22 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw23 = load i32, i32* %param_ptr22
%reg24 = trunc i32 %param_raw23 to i1
br i1 %reg24, label %true_case_97, label %false_case_99
true_case_97:
br label %true_case_101
false_case_99:
br label %false_case_103
true_case_101:
br label %set_bool_reg_105
false_case_103:
br label %set_bool_reg_105
set_bool_reg_105:
%reg25 = phi i32 [1, %true_case_101], [0, %false_case_103]
%reg26 = add i32 0, %reg25
%reg27 = call i1(i32, i32) @g(i32  5, i32 %reg26)
br i1 %reg27, label %true_case_110, label %false_case_112
true_case_110:
br label %true_case_114
false_case_112:
br label %false_case_116
true_case_114:
br label %set_bool_reg_118
false_case_116:
br label %set_bool_reg_118
set_bool_reg_118:
%reg28 = phi i32 [1, %true_case_114], [0, %false_case_116]
%reg29 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 %reg28, i32* %reg29
br label %parse_label_123
parse_label_123:
%param_ptr30 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw31 = load i32, i32* %param_ptr30
%reg32 = trunc i32 %param_raw31 to i1
br i1 %reg32, label %true_case_128, label %false_case_130
true_case_128:
br label %statement_136
false_case_130:
br label %statement_132
statement_132:
%str_ptr_reg33 = getelementptr [12 x i8], [12 x i8]* @.string_id1, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg33)
br label %statement_136
statement_136:
%param_ptr34 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw35 = load i32, i32* %param_ptr34
%reg36 = trunc i32 %param_raw35 to i1
br i1 %reg36, label %true_case_141, label %false_case_143
true_case_141:
br label %parse_label_145
false_case_143:
br label %false_case_156
parse_label_145:
%param_ptr37 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw38 = load i32, i32* %param_ptr37
%reg39 = trunc i32 %param_raw38 to i1
br i1 %reg39, label %true_case_150, label %false_case_152
true_case_150:
br label %true_case_154
false_case_152:
br label %false_case_156
true_case_154:
br label %set_bool_reg_158
false_case_156:
br label %set_bool_reg_158
set_bool_reg_158:
%reg40 = phi i32 [1, %true_case_154], [0, %false_case_156]
%reg41 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
store i32 %reg40, i32* %reg41
br label %parse_label_163
parse_label_163:
%param_ptr42 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
%param_raw43 = load i32, i32* %param_ptr42
%reg44 = trunc i32 %param_raw43 to i1
br i1 %reg44, label %true_case_168, label %false_case_170
true_case_168:
br label %statement_176
false_case_170:
br label %statement_172
statement_172:
%str_ptr_reg45 = getelementptr [12 x i8], [12 x i8]* @.string_id2, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg45)
br label %statement_176
statement_176:
%reg46 = call i1(i32, i32) @f(i32  120, i32  110)
br i1 %reg46, label %true_case_179, label %false_case_181
true_case_179:
br label %true_case_203
false_case_181:
br label %parse_label_183
parse_label_183:
%reg47 = call i1(i32, i32) @f(i32  10, i32  6)
br i1 %reg47, label %true_case_186, label %false_case_188
true_case_186:
br label %true_case_190
false_case_188:
br label %false_case_192
true_case_190:
br label %set_bool_reg_194
false_case_192:
br label %set_bool_reg_194
set_bool_reg_194:
%reg48 = phi i32 [1, %true_case_190], [0, %false_case_192]
%reg49 = add i32 0, %reg48
%reg50 = call i1(i32, i32) @g(i32  45, i32 %reg49)
br i1 %reg50, label %true_case_199, label %false_case_201
true_case_199:
br label %true_case_203
false_case_201:
br label %false_case_205
true_case_203:
br label %set_bool_reg_207
false_case_205:
br label %set_bool_reg_207
set_bool_reg_207:
%reg51 = phi i32 [1, %true_case_203], [0, %false_case_205]
%reg52 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 3
store i32 %reg51, i32* %reg52
br label %parse_label_212
parse_label_212:
%param_ptr53 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
%param_raw54 = load i32, i32* %param_ptr53
%reg55 = trunc i32 %param_raw54 to i1
br i1 %reg55, label %true_case_217, label %false_case_219
true_case_217:
br label %parse_label_225
false_case_219:
br label %statement_221
statement_221:
%str_ptr_reg56 = getelementptr [21 x i8], [21 x i8]* @.string_id3, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg56)
br label %parse_label_225
parse_label_225:
%param_ptr57 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw58 = load i32, i32* %param_ptr57
%reg59 = trunc i32 %param_raw58 to i1
br i1 %reg59, label %true_case_230, label %false_case_232
true_case_230:
br label %parse_label_234
false_case_232:
br label %parse_label_261
parse_label_234:
%param_ptr60 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw61 = load i32, i32* %param_ptr60
%reg62 = trunc i32 %param_raw61 to i1
br i1 %reg62, label %true_case_239, label %false_case_241
true_case_239:
br label %parse_label_243
false_case_241:
br label %parse_label_261
parse_label_243:
%param_ptr63 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw64 = load i32, i32* %param_ptr63
%reg65 = trunc i32 %param_raw64 to i1
br i1 %reg65, label %true_case_248, label %false_case_250
true_case_248:
br label %parse_label_252
false_case_250:
br label %parse_label_261
parse_label_252:
%param_ptr66 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 3
%param_raw67 = load i32, i32* %param_ptr66
%reg68 = trunc i32 %param_raw67 to i1
br i1 %reg68, label %true_case_257, label %false_case_259
true_case_257:
br label %statement_270
false_case_259:
br label %parse_label_261
parse_label_261:
%param_ptr69 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
%param_raw70 = load i32, i32* %param_ptr69
%reg71 = trunc i32 %param_raw70 to i1
br i1 %reg71, label %true_case_266, label %false_case_268
true_case_266:
br label %statement_274
false_case_268:
br label %statement_270
statement_270:
%str_ptr_reg72 = getelementptr [9 x i8], [9 x i8]* @.string_id4, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg72)
br label %parse_label_278
statement_274:
%str_ptr_reg73 = getelementptr [11 x i8], [11 x i8]* @.string_id5, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg73)
br label %parse_label_278
parse_label_278:
%reg74 = call i1(i32, i32) @f(i32  10, i32  6)
br i1 %reg74, label %true_case_281, label %false_case_283
true_case_281:
br label %parse_label_285
false_case_283:
br label %statement_320
parse_label_285:
%param_ptr75 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw76 = load i32, i32* %param_ptr75
%reg77 = trunc i32 %param_raw76 to i1
br i1 %reg77, label %true_case_290, label %false_case_292
true_case_290:
br label %true_case_303
false_case_292:
br label %parse_label_294
parse_label_294:
%param_ptr78 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw79 = load i32, i32* %param_ptr78
%reg80 = trunc i32 %param_raw79 to i1
br i1 %reg80, label %true_case_299, label %false_case_301
true_case_299:
br label %true_case_303
false_case_301:
br label %false_case_305
true_case_303:
br label %set_bool_reg_307
false_case_305:
br label %set_bool_reg_307
set_bool_reg_307:
%reg81 = phi i32 [1, %true_case_303], [0, %false_case_305]
%reg82 = add i32 0, %reg81
%reg83 = call i1(i32, i32) @g(i32  100, i32 %reg82)
br i1 %reg83, label %true_case_312, label %false_case_314
true_case_312:
br label %statement_316
false_case_314:
br label %statement_320
statement_316:
%str_ptr_reg84 = getelementptr [10 x i8], [10 x i8]* @.string_id6, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg84)
br label %parse_label_324
statement_320:
%str_ptr_reg85 = getelementptr [12 x i8], [12 x i8]* @.string_id7, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg85)
br label %parse_label_324
parse_label_324:
%param_ptr86 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw87 = load i32, i32* %param_ptr86
%reg88 = trunc i32 %param_raw87 to i1
br i1 %reg88, label %true_case_329, label %false_case_331
true_case_329:
br label %parse_label_333
false_case_331:
br label %statement_386
parse_label_333:
%param_ptr89 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw90 = load i32, i32* %param_ptr89
%reg91 = trunc i32 %param_raw90 to i1
br i1 %reg91, label %true_case_338, label %false_case_340
true_case_338:
br label %parse_label_342
false_case_340:
br label %statement_386
parse_label_342:
%param_ptr92 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
%param_raw93 = load i32, i32* %param_ptr92
%reg94 = trunc i32 %param_raw93 to i1
br i1 %reg94, label %true_case_347, label %false_case_349
true_case_347:
br label %parse_label_351
false_case_349:
br label %statement_386
parse_label_351:
%param_ptr95 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 3
%param_raw96 = load i32, i32* %param_ptr95
%reg97 = trunc i32 %param_raw96 to i1
br i1 %reg97, label %true_case_356, label %false_case_358
true_case_356:
br label %parse_label_360
false_case_358:
br label %statement_386
parse_label_360:
%reg98 = call i1(i32, i32) @f(i32  10, i32  18)
br i1 %reg98, label %true_case_363, label %false_case_365
true_case_363:
br label %parse_label_367
false_case_365:
br label %statement_386
parse_label_367:
br label %false_case_371
true_case_369:
br label %set_bool_reg_373
false_case_371:
br label %set_bool_reg_373
set_bool_reg_373:
%reg99 = phi i32 [1, %true_case_369], [0, %false_case_371]
%reg100 = add i32 0, %reg99
%reg101 = call i1(i32, i32) @g(i32  5, i32 %reg100)
br i1 %reg101, label %true_case_378, label %false_case_380
true_case_378:
br label %statement_382
false_case_380:
br label %statement_386
statement_382:
%str_ptr_reg102 = getelementptr [9 x i8], [9 x i8]* @.string_id8, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg102)
br label %func_end_391
statement_386:
%str_ptr_reg103 = getelementptr [11 x i8], [11 x i8]* @.string_id9, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg103)
br label %func_end_391
br label %func_end_391
func_end_391:
ret void
}
