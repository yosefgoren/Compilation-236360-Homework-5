declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
@.string_id0 = constant [3 x i8] c"ok\00"
define i1@f(){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
br label %true_case_5
true_case_5:
br label %set_bool_reg_9
false_case_7:
br label %set_bool_reg_9
set_bool_reg_9:
%reg1 = phi i1 [1, %true_case_5], [0, %false_case_7]
ret i1 %reg1
br label %func_end_13
func_end_13:
ret i1 0
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_19
statement_19:
%reg2 = call i1() @f()
br i1 %reg2, label %true_case_22, label %false_case_24
true_case_22:
br label %true_case_26
false_case_24:
br label %false_case_28
true_case_26:
br label %set_bool_reg_30
false_case_28:
br label %set_bool_reg_30
set_bool_reg_30:
%reg3 = phi i32 [1, %true_case_26], [0, %false_case_28]
%reg4 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg3, i32* %reg4
br label %parse_label_35
parse_label_35:
%param_ptr5 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw6 = load i32, i32* %param_ptr5
%reg7 = trunc i32 %param_raw6 to i1
br i1 %reg7, label %true_case_40, label %false_case_42
true_case_40:
br label %statement_44
false_case_42:
br label %func_end_53
statement_44:
%reg8 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 5, i32* %reg8
br label %statement_48
statement_48:
%str_ptr_reg9 = getelementptr [3 x i8], [3 x i8]* @.string_id0, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg9)
br label %func_end_53
br label %func_end_53
func_end_53:
ret void
}
