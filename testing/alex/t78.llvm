declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
@.string_id0 = constant [11 x i8] c"I'm func 4\00"
@.string_id1 = constant [14 x i8] c"calling test1\00"
@.string_id2 = constant [21 x i8] c"calling inline test1\00"
@.string_id3 = constant [21 x i8] c"calling test2 with 1\00"
@.string_id4 = constant [25 x i8] c"calling test3 with var 2\00"
@.string_id5 = constant [14 x i8] c"calling test4\00"
define i32@test1(){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
ret i32 22
br label %func_end_6
func_end_6:
ret i32 0
}
define i32@test2(i32){
%sp = alloca [50 x i32]
br label %statement_12
statement_12:
%reg1 = add i32 0, %0
%reg2 = add i32 22, %reg1
ret i32 %reg2
br label %func_end_17
func_end_17:
ret i32 0
}
define void@test3(i32){
%sp = alloca [50 x i32]
br label %statement_23
statement_23:
%reg3 = add i32 0, %0
call void(i32) @printi(i32 %reg3)
br label %statement_27
statement_27:
ret void
br label %func_end_30
func_end_30:
ret void
}
define void@test4(){
%sp = alloca [50 x i32]
br label %statement_36
statement_36:
%str_ptr_reg4 = getelementptr [11 x i8], [11 x i8]* @.string_id0, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg4)
br label %statement_40
statement_40:
ret void
br label %func_end_43
func_end_43:
ret void
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_49
statement_49:
%str_ptr_reg5 = getelementptr [14 x i8], [14 x i8]* @.string_id1, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg5)
br label %statement_53
statement_53:
%reg6 = call i32() @test1()
%reg7 = add i32 0, %reg6
%reg8 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg7, i32* %reg8
br label %statement_59
statement_59:
%param_ptr9 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw10 = load i32, i32* %param_ptr9
%reg11 = add i32 0, %param_raw10
call void(i32) @printi(i32 %reg11)
br label %statement_65
statement_65:
%str_ptr_reg12 = getelementptr [21 x i8], [21 x i8]* @.string_id2, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg12)
br label %statement_69
statement_69:
%reg13 = call i32() @test1()
%reg14 = add i32 0, %reg13
call void(i32) @printi(i32 %reg14)
br label %statement_74
statement_74:
%str_ptr_reg15 = getelementptr [21 x i8], [21 x i8]* @.string_id3, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg15)
br label %statement_78
statement_78:
%reg16 = call i32(i32) @test2(i32 1)
%reg17 = add i32 0, %reg16
%reg18 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg17, i32* %reg18
br label %statement_84
statement_84:
%param_ptr19 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw20 = load i32, i32* %param_ptr19
%reg21 = add i32 0, %param_raw20
call void(i32) @printi(i32 %reg21)
br label %statement_90
statement_90:
%str_ptr_reg22 = getelementptr [25 x i8], [25 x i8]* @.string_id4, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg22)
br label %statement_94
statement_94:
%reg23 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 2, i32* %reg23
br label %statement_98
statement_98:
%param_ptr24 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw25 = load i32, i32* %param_ptr24
%reg26 = add i32 0, %param_raw25
call void(i32) @test3(i32 %reg26)
br label %statement_104
statement_104:
%str_ptr_reg27 = getelementptr [14 x i8], [14 x i8]* @.string_id5, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg27)
br label %statement_108
statement_108:
call void() @test4()
br label %statement_111
statement_111:
ret void
br label %func_end_114
func_end_114:
ret void
}
