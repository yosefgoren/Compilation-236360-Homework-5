declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
@.string_id0 = constant [4 x i8] c"jg=\00"
@.string_id1 = constant [4 x i8] c"2a=\00"
define void@main(){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
%reg1 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32  50, i32* %reg1
br label %statement_7
statement_7:
%reg2 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32  17, i32* %reg2
br label %parse_label_11
parse_label_11:
%param_ptr3 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw4 = load i32, i32* %param_ptr3
%reg5 = add i32 0, %param_raw4
%param_ptr6 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw7 = load i32, i32* %param_ptr6
%reg8 = add i32 0, %param_raw7
%reg9 = icmp sgt i32 %reg5, %reg8
br i1 %reg9, label %parse_label_20, label %statement_36
parse_label_20:
%param_ptr10 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw11 = load i32, i32* %param_ptr10
%reg12 = add i32 0, %param_raw11
%reg13 = icmp sgt i32 %reg12,  10
br i1 %reg13, label %statement_26, label %statement_36
statement_26:
%str_ptr_reg14 = getelementptr [4 x i8], [4 x i8]* @.string_id0, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg14)
br label %statement_30
statement_30:
%param_ptr15 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw16 = load i32, i32* %param_ptr15
%reg17 = add i32 0, %param_raw16
call void(i32) @printi(i32 %reg17)
br label %func_end_48
statement_36:
%str_ptr_reg18 = getelementptr [4 x i8], [4 x i8]* @.string_id1, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg18)
br label %statement_40
statement_40:
%param_ptr19 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw20 = load i32, i32* %param_ptr19
%reg21 = add i32 0, %param_raw20
%reg22 = mul i32  2, %reg21
call void(i32) @printi(i32 %reg22)
br label %func_end_48
br label %func_end_48
func_end_48:
ret void
}
