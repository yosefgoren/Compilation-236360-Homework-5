declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
@.string_id0 = constant [2 x i8] c"1\00"
@.string_id1 = constant [7 x i8] c"else 1\00"
@.string_id2 = constant [2 x i8] c"2\00"
@.string_id3 = constant [7 x i8] c"else 2\00"
@.string_id4 = constant [2 x i8] c"3\00"
@.string_id5 = constant [7 x i8] c"else 3\00"
@.string_id6 = constant [2 x i8] c"4\00"
@.string_id7 = constant [7 x i8] c"else 4\00"
define void@main(){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
%reg1 = icmp eq i32  3,  1
br i1 %reg1, label %true_case_6, label %false_case_8
true_case_6:
br label %set_bool_reg_10
false_case_8:
br label %set_bool_reg_10
set_bool_reg_10:
%reg2 = phi i32 [1, %true_case_6], [0, %false_case_8]
%reg3 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg2, i32* %reg3
br label %parse_label_15
parse_label_15:
%param_ptr4 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw5 = load i32, i32* %param_ptr4
%reg6 = trunc i32 %param_raw5 to i1
br i1 %reg6, label %true_case_20, label %false_case_22
true_case_20:
br label %statement_24
false_case_22:
br label %statement_28
statement_24:
%str_ptr_reg7 = getelementptr [2 x i8], [2 x i8]* @.string_id0, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg7)
br label %statement_32
statement_28:
%str_ptr_reg8 = getelementptr [7 x i8], [7 x i8]* @.string_id1, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg8)
br label %statement_32
statement_32:
%reg9 = icmp eq i32  1,  1
br i1 %reg9, label %true_case_35, label %false_case_37
true_case_35:
br label %set_bool_reg_39
false_case_37:
br label %set_bool_reg_39
set_bool_reg_39:
%reg10 = phi i32 [1, %true_case_35], [0, %false_case_37]
%reg11 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 %reg10, i32* %reg11
br label %parse_label_44
parse_label_44:
%param_ptr12 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw13 = load i32, i32* %param_ptr12
%reg14 = trunc i32 %param_raw13 to i1
br i1 %reg14, label %true_case_49, label %false_case_51
true_case_49:
br label %statement_53
false_case_51:
br label %statement_57
statement_53:
%str_ptr_reg15 = getelementptr [2 x i8], [2 x i8]* @.string_id2, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg15)
br label %statement_61
statement_57:
%str_ptr_reg16 = getelementptr [7 x i8], [7 x i8]* @.string_id3, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg16)
br label %statement_61
statement_61:
%reg17 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
store i32 0, i32* %reg17
br label %statement_65
statement_65:
%reg18 = icmp eq i32  3,  1
br i1 %reg18, label %true_case_68, label %false_case_70
true_case_68:
br label %set_bool_reg_72
false_case_70:
br label %set_bool_reg_72
set_bool_reg_72:
%reg19 = phi i32 [1, %true_case_68], [0, %false_case_70]
%reg20 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
store i32 %reg19, i32* %reg20
br label %parse_label_77
parse_label_77:
%param_ptr21 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
%param_raw22 = load i32, i32* %param_ptr21
%reg23 = trunc i32 %param_raw22 to i1
br i1 %reg23, label %true_case_82, label %false_case_84
true_case_82:
br label %statement_86
false_case_84:
br label %statement_90
statement_86:
%str_ptr_reg24 = getelementptr [2 x i8], [2 x i8]* @.string_id4, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg24)
br label %statement_94
statement_90:
%str_ptr_reg25 = getelementptr [7 x i8], [7 x i8]* @.string_id5, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg25)
br label %statement_94
statement_94:
%reg26 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 3
store i32 0, i32* %reg26
br label %statement_98
statement_98:
%reg27 = icmp eq i32  1,  1
br i1 %reg27, label %true_case_101, label %false_case_103
true_case_101:
br label %set_bool_reg_105
false_case_103:
br label %set_bool_reg_105
set_bool_reg_105:
%reg28 = phi i32 [1, %true_case_101], [0, %false_case_103]
%reg29 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 3
store i32 %reg28, i32* %reg29
br label %parse_label_110
parse_label_110:
%param_ptr30 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 3
%param_raw31 = load i32, i32* %param_ptr30
%reg32 = trunc i32 %param_raw31 to i1
br i1 %reg32, label %true_case_115, label %false_case_117
true_case_115:
br label %statement_119
false_case_117:
br label %statement_123
statement_119:
%str_ptr_reg33 = getelementptr [2 x i8], [2 x i8]* @.string_id6, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg33)
br label %func_end_128
statement_123:
%str_ptr_reg34 = getelementptr [7 x i8], [7 x i8]* @.string_id7, i32 0, i32 0
call void(i8*) @print(i8* %str_ptr_reg34)
br label %func_end_128
br label %func_end_128
func_end_128:
ret void
}
