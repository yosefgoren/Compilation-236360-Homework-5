declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
%int2byte_conv_reg1 = trunc i32  5 to i8
%raw_reg2 = zext i8 %int2byte_conv_reg1 to i32
%reg3 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %raw_reg2, i32* %reg3
br label %parse_label_9
parse_label_9:
%param_ptr4 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw5 = load i32, i32* %param_ptr4
%truncated_byte6 = trunc i32 %param_raw5 to i8
%reg7 = add i8 0, %truncated_byte6
%reg8 = add i8 %reg7,  3
%b2int_conv_reg9 = zext i8 %reg8 to i32
%reg10 = icmp eq i32 %b2int_conv_reg9,  8
br i1 %reg10, label %statement_18, label %statement_21
statement_18:
call void(i32) @printi(i32  420)
br label %statement_24
statement_21:
call void(i32) @printi(i32  4201)
br label %statement_24
statement_24:
%param_ptr11 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw12 = load i32, i32* %param_ptr11
%truncated_byte13 = trunc i32 %param_raw12 to i8
%reg14 = add i8 0, %truncated_byte13
%b2int_conv_reg15 = zext i8 %reg14 to i32
%reg16 = add i32 %b2int_conv_reg15,  2
%reg17 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 %reg16, i32* %reg17
br label %statement_34
statement_34:
%param_ptr18 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw19 = load i32, i32* %param_ptr18
%reg20 = add i32 0, %param_raw19
call void(i32) @printi(i32 %reg20)
br label %statement_40
statement_40:
%param_ptr21 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw22 = load i32, i32* %param_ptr21
%reg23 = add i32 0, %param_raw22
%int2byte_conv_reg24 = trunc i32 %reg23 to i8
%reg25 = add i8 %int2byte_conv_reg24,  3
%reg26 = mul i8 %reg25,  10
%raw_reg27 = zext i8 %reg26 to i32
%reg28 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
store i32 %raw_reg27, i32* %reg28
br label %statement_51
statement_51:
%param_ptr29 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 2
%param_raw30 = load i32, i32* %param_ptr29
%truncated_byte31 = trunc i32 %param_raw30 to i8
%reg32 = add i8 0, %truncated_byte31
%raw_reg33 = zext i8 %reg32 to i32
call void(i32) @printi(i32 %raw_reg33)
br label %func_end_60
br label %func_end_60
func_end_60:
ret void
}
