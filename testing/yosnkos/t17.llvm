declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
@.str_div_zero = constant [23 x i8] c"Error division by zero\00"
define void @errorIfZero9001(i32) {
	%cond = icmp eq i32 0, %0
	br i1 %cond, label %exit, label %return
exit:
	%err_str_ptr = getelementptr [23 x i8], [23 x i8]* @.str_div_zero, i32 0, i32 0
	call void(i8*) @print(i8* %err_str_ptr)
	call void(i32) @exit(i32 1)
	br label %return
return:
	ret void
}
define void@foo(i32){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
%truncated_byte1 = trunc i32 %0 to i8
%reg2 = add i8 0, %truncated_byte1
%b2int_conv_reg3 = zext i8 %reg2 to i32
%reg4 = add i32 %b2int_conv_reg3,  33
call void(i32) @printi(i32 %reg4)
br label %func_end_11
br label %func_end_11
func_end_11:
ret void
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_17
statement_17:
%raw_reg5 = zext i8  99 to i32
%reg6 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %raw_reg5, i32* %reg6
br label %statement_22
statement_22:
%param_ptr7 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw8 = load i32, i32* %param_ptr7
%truncated_byte9 = trunc i32 %param_raw8 to i8
%reg10 = add i8 0, %truncated_byte9
%b2int_conv_reg11 = zext i8 %reg10 to i32
%reg12 = add i32 %b2int_conv_reg11,  1
%reg13 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
store i32 %reg12, i32* %reg13
br label %statement_32
statement_32:
%param_ptr14 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 1
%param_raw15 = load i32, i32* %param_ptr14
%reg16 = add i32 0, %param_raw15
%int2byte_conv_reg17 = trunc i32 %reg16 to i8
%raw_reg18 = zext i8 %int2byte_conv_reg17 to i32
call void(i32) @foo(i32 %raw_reg18)
br label %func_end_41
br label %func_end_41
func_end_41:
ret void
}
